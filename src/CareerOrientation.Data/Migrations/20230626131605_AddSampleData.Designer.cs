// <auto-generated />
using System;
using CareerOrientation.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CareerOrientation.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230626131605_AddSampleData")]
    partial class AddSampleData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CareerOrientation.Data.Entities.Courses.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CourseId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("Semester")
                        .HasColumnType("integer");

                    b.Property<int?>("TrackId")
                        .HasColumnType("integer");

                    b.HasKey("CourseId");

                    b.HasIndex("TrackId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = 1,
                            Description = "Το μάθημα \"Λογική Σχεδίαση Ψηφιακών Συστημάτων\" εξετάζει τη σχεδίαση και λειτουργία των ψηφιακών συστημάτων. Καλύπτει θέματα όπως το δυαδικό σύστημα αρίθμησης, άλγεβρα Boole και εφαρμογές της, αριθμητικά κυκλώματα, σύγχρονα ακολουθιακά κυκλώματα , μηχα-νές καταστάσεων, μονάδες μνήμης, ψηφιακά ολοκληρωμένα κυκλώματα, προσομοίωση κυκλωμάτων και γλώσσες περιγραφής υλικού.",
                            Name = "ΛΟΓΙΚΗ ΣΧΕΔΙΑΣΗ ΨΗΦΙΑΚΩΝ ΣΥΣΤΗΜΑΤΩΝ",
                            Semester = 1
                        },
                        new
                        {
                            CourseId = 2,
                            Description = "Το μάθημα \"Μαθηματικά των υπολογιστών\" παρέχει μια εισαγωγή στη θεωρία συνόλων και βασικών αρχών των μαθηματικών, όπως η μαθηματική επαγωγή, αρχή εγκλεισμού – αποκλεισμού, αρχή του Περιστερεώνα και αρχή της διαγωνιοποίησης. Περιλαμβάνει, επίσης, τη μα-θηματική λογική, την άλγεβρα Boole, τη συνδυαστική ανάλυση, τις διαφορές και τα αθροίσματα, καθώς και στοιχεία της θεωρίας αριθμών.",
                            Name = "ΜΑΘΗΜΑΤΙΚΑ ΤΩΝ ΥΠΟΛΟΓΙΣΤΩΝ",
                            Semester = 1
                        },
                        new
                        {
                            CourseId = 3,
                            Description = "Στο μάθημα αυτό περιγράφονται με εισαγωγικό, αλλά πλήρη, τρόπο οι τεχνολογίες και τα πρωτόκολλα πάνω στα οποία στηρίζονται το Διαδίκτυο και ο Παγκόσμιος Ιστός και αναλύονται με περισσότερη λεπτομέρεια η ανάπτυξη εφαρμογών με τη χρήση συγκεκριμένων εργαλεί-ων/γλωσσών, οι οποίες εκτελούνται στην πλευρά του πελάτη ή/και στην πλευρά του εξυπηρετητή. Μερικές από τις έννοιες οι οποίες αντιμετωπίζονται είναι: στοίβα πρωτοκόλλων TCP/IP, επίπεδο μεταφοράς και διαδικτύου, HTML5, CSS3, Javascript, jQuery, κλήση AJAX, PHP nodejs, XML και JSON.",
                            Name = "ΤΕΧΝΟΛΟΓΙΕΣ ΔΙΑΔΙΚΤΥΟΥ",
                            Semester = 1
                        },
                        new
                        {
                            CourseId = 4,
                            Description = "Το μάθημα \"Εισαγωγή στην Επιστήμη των Υπολογιστών\" προσφέρει μια εισαγωγή στις βασικές αρχές και τις έννοιες της επιστήμης των υπολογιστών. Περιλαμβάνει θέματα όπως η αναπαράσταση και κωδικοποίηση δεδομένων, η άλγεβρα Boole, αλγορίθμους, βασικές αρχές των λειτουργικών συστημάτων, γλώσσες προγραμματισμού, δομές δεδομένων, σφάλματα και εξαι-ρέσεις, καθώς και συλλογή δεδομένων από το διαδίκτυο. Αυτά τα θέματα παρέχουν τις βασικές γνώσεις και τις δεξιότητες που απαιτούνται για την κατανόηση και την ανάπτυξη υπολογιστικών συστημάτων και λογισμικού.",
                            Name = "ΕΙΣΑΓΩΓΗ ΣΤΗΝ ΕΠΙΣΤΗΜΗ ΤΩΝ ΥΠΟΛΟΓΙΣΤΩΝ",
                            Semester = 1
                        },
                        new
                        {
                            CourseId = 5,
                            Description = "Το μάθημα \"Διακριτά Μαθηματικά\" παρέχει μια εισαγωγή σε διάφορα θέματα των διακριτών μαθηματικών. Οι κύριοι τομείς που καλύπτονται είναι η θεωρία γραφημάτων και οι εφαρμογές της στους αλγόριθμους, οι γεννήτριες συναρτήσεις, οι αναγωγικές εξισώσεις, οι ασυμπτωτικές εκτιμήσεις, οι γλώσσες και αυτόματα. ",
                            Name = "ΔΙΑΚΡΙΤΑ ΜΑΘΗΜΑΤΙΚΑ",
                            Semester = 1
                        },
                        new
                        {
                            CourseId = 6,
                            Description = "Το αντικείμενο του μαθήματος είναι η μελέτη των βασικών δομών δεδομένων που χρησιμοποιούνται στην ανάπτυξη αλγορίθμων. Έμφαση δίνεται στο χρόνο εκτέλεσης των βασικών λειτουργιών των δομών δεδομένων και στον αναλυτικό προσδιορισμό του πλήθους των βασικών εντολών που απαιτούνται για την ολοκλήρωσή τους. Συγκεκριμένα, παρουσιάζονται οι δομές του πίνακα, της διασυνδεδεμένης λίστας, της στοίβας, της ουράς, του σωρού, των δυαδικών δέντρων αναζήτησης. Επίσης, παρουσιάζονται η τεχνική του κατακερματισμού (hashing), τα ισοζυγισμένα δέντρα αναζήτησης (AVL, Red-Black και Β-δέντρα) καθώς και βασικοί αλγόριθμοι ταξινόμησης",
                            Name = "ΔΟΜΕΣ ΔΕΔΟΜΕΝΩΝ",
                            Semester = 2
                        },
                        new
                        {
                            CourseId = 7,
                            Description = "ΤΑντικείμενο του μαθήματος είναι η εισαγωγή στον αντικειμενοστρεφή προγραμματισμό με πλήρη ανάλυση της γλώσσας προγραμματισμού JAVA. Καλύπτει βασικές αρχές τις όπως βασι-κές δομές, κληρονομικότητα, πολυμορφισμός, ενθυλάκωση, ειδικές κλάσεις, εξαιρέσεις, ειδικά θέματα, βιβλιοθήκες, διαπροσωπίες, προσπέλαση αρχείων, access modifiers, non-access modifiers. (hashing), τα ισοζυγισμένα δέντρα αναζήτησης (AVL, Red-Black και Β-δέντρα) καθώς και αλγόριθμοι ταξινόμησης.",
                            Name = "ΑΝΤΙΚΕΙΜΕΝΟΣΤΡΕΦΗΣ ΠΡΟΓΡΑΜΜΑΤΙΣΜΟΣ",
                            Semester = 2
                        },
                        new
                        {
                            CourseId = 8,
                            Description = "Το μάθημα \"Αρχιτεκτονική Υπολογιστών\" εστιάζει στην οργάνωση, τη σχεδίαση και την τεχνο-λογία των υπολογιστών. Παρουσιάζει την αρχιτεκτονική συνόλου εντολών, περιλαμβάνοντας τους καταχωρητές, τις εντολές και τους τρόπους διευθυνσιοδότησης. Επίσης, μελετά τη γλώσ-σα μηχανής, τη συμβολική γλώσσα (Assembly) και τους συμβολομεταφραστές (Assemblers). Τέλος, στο μάθημα αναλύονται οι αριθμητικές πτυχές των υπολογιστών, όπως η αναπαράστα-ση ακεραίων αριθμών και αριθμών κινητής υποδιαστολής.",
                            Name = "ΑΡΧΙΤΕΚΤΟΝΙΚΗ ΥΠΟΛΟΓΙΣΤΩΝ",
                            Semester = 2
                        },
                        new
                        {
                            CourseId = 9,
                            Description = "Το μάθημα εντάσσεται στο επιστημονικό πεδίο της επιχειρησιακής έρευνας. Αναφέρεται σε μία από τις βασικές τεχνικές βελτιστοποίησης της επιχειρηματικής έρευνας, τον γραμμικό προγραμματισμό, ο οποίος προσφέρει την μεθοδολογική προσέγγιση και το πλαίσιο επίλυσης πολ-λών προβλημάτων της οργάνωσης και της διοίκησης.",
                            Name = "ΜΑΘΗΜΑΤΙΚΟΣ ΠΡΟΓΡΑΜΜΑΤΙΣΜΟΣ",
                            Semester = 3
                        },
                        new
                        {
                            CourseId = 10,
                            Description = "Το αντικείμενο του μαθήματος είναι η ανάπτυξη εφαρμογών αντικειμενοστρεφούς μοντέλου ανάπτυξης λογισμικού. Στο πλαίσιο του μαθήματος δίνεται ιδιαίτερη έμφαση στα εργαλεία α-νάπτυξης εφαρμογών, ολοκληρωμένα περιβάλλοντα ανάπτυξης (IDEs). Με τη χρήση του Visual Studio και της C# ως γλώσσας προγραμματισμού, οι φοιτητές μαθαίνουν να αναπτύσσουν desktop, web, ή/και mobile εφαρμογές, γρήγορα, αποδοτικά και κυρίως με την όσο το δυνατόν μικρότερη πιθανότητα να κάνουν λάθη προγραμματισμού ή/και λογικής",
                            Name = "ΑΝΤΙΚΕΙΜΕΝΟΣΤΡΕΦΗΣ ΑΝΑΠΤΥΞΗ ΕΦΑΡΜΟΓΩΝ",
                            Semester = 3
                        },
                        new
                        {
                            CourseId = 11,
                            Description = "Βασικές έννοιες και αρχές Λειτουργικών Συστημάτων. Αρχιτεκτονική, δομή και κατηγοριοποίηση Λειτουργικών Συστημάτων. Διεργασίες, Νήματα. Δια-διεργασιακή επικοι-νωνία. Χρονοδρομολόγηση της CPU. Σύστημα μνήμης. Διαχείριση μνήμης. Εικονική Μνήμη. Σελιδοποίηση. Αλγόριθμοι διαχείρισης μνήμης. Διαχείριση Αρχείων και καταλόγων. Συστήματα Αρχείων. Είσοδος/Έξοδος. Αδιέξοδα.",
                            Name = "ΛΕΙΤΟΥΡΓΙΚΑ ΣΥΣΤΗΜΑΤΑ",
                            Semester = 3
                        },
                        new
                        {
                            CourseId = 12,
                            Description = "Το μάθημα ασχολείται με τη Θεωρία των Γλωσσών, την κατασκευή αυτομάτων αναγνώρισης λεκτικών μονάδων, αλλά και επιμέρους τμήματα, που αποτελούν τη βάση της δημιουργίας ε-νός μεταγλωττιστή (compiler) μιας γλώσσας προγραμματισμού, την Αναζήτηση, ανάλυση και σύνθεση δεδομένων και πληροφοριών, με τη χρήση και των απαραίτητων τεχνολογιών.",
                            Name = "ΜΕΤΑΓΛΩΤΤΙΣΤΕΣ",
                            Semester = 3
                        },
                        new
                        {
                            CourseId = 13,
                            Description = "Το μάθημα \"Πιθανότητες και Στατιστική\" παρουσιάζει μια εισαγωγή στις βασικές έννοιες και μεθόδους της πιθανότητας και της στατιστικής. Οι φοιτητές μελετούν πειράματα τύχης, δειγματοχώρους και γεγονότα, και εξετάζουν την αξιωματική θεμελίωση της πιθανότητας. Επίσης, αναλύονται οι πιθανότητες ένωσης γεγονότων, η δεσμευμένη πιθανότητα και η α-νεξαρτησία. Το μάθημα καλύπτει επίσης τις τυχαίες μεταβλητές, τις συναρτήσεις κατανο-μής και πυκνότητας πιθανότητας και τις πολυδιάστατες τυχαίες μεταβλητές. Τέλος, πραγματοποιείται εισαγωγή στην περιγραφική στατιστική, τη στατιστική συμπερασματολογία και τους έλεγχους στατιστικών υποθέσεων.",
                            Name = "ΠΙΘΑΝΟΤΗΤΕΣ ΚΑΙ ΣΤΑΤΙΣΤΙΚΗ",
                            Semester = 3
                        },
                        new
                        {
                            CourseId = 14,
                            Description = "Το μάθημα \"Δίκτυα Υπολογιστών\" εστιάζει στην ανάλυση και επεξήγηση των βασικών έννοιων, αρχών και πρωτοκόλλων που αφορούν στη δικτύωση. Με έμφαση στα πρωτόκολλα του Διαδικτύου, περι-γράφονται θέματα όπως οι διάφοροι τύποι δικτύων (μεταγωγής, διαδικτύων), η σχεδίαση των δικτύ-ων, η μετάδοση πληροφορίας, οι αλγόριθμοι προσπέλασης σε κοινό μέσο, οι τεχνολογίες μεταγωγής, η διαδικασία δρομολόγησης, η επικοινωνία από άκρο σε άκρο, οι ασύρματες επικοινωνίες και η επίδοση εφαρμογών. Σκοπός είναι η κατανόηση της λειτουργίας και της διαχείρισης των δικτύων υπολογιστών.",
                            Name = "ΔΙΚΤΥΑ ΥΠΟΛΟΓΙΣΤΩΝ ",
                            Semester = 4
                        },
                        new
                        {
                            CourseId = 15,
                            Description = "Το μάθημα \"Αλγόριθμοι\" επικεντρώνεται στη μελέτη τεχνικών επίλυσης βασικών υπολογιστικών προ-βλημάτων. Εξετάζεται ο σχεδιασμός αποδοτικών τεχνικών επίλυσης για προβλήματα στην Πληροφορική, που συντελούν στην επίλυση άλλων υπολογιστικών προβλημάτων. Επικεντρώνεται στο χρόνο εκτέλεσης των αλγορίθμων και στη μαθηματική ανάλυση τους. Παρουσιάζονται αλγόριθμοι για προβλήματα ταξινόμησης, αναζήτησης, γραφημάτων, αριθμητικών υπολογισμών και εισαγωγή στη Θεωρία Υπολογισμού.",
                            Name = "ΑΛΓΟΡΙΘΜΟΙ",
                            Semester = 4
                        },
                        new
                        {
                            CourseId = 16,
                            Description = "Το μάθημα \"Βάσεις Δεδομένων\" παρέχει γνώσεις για τον σχεδιασμό και τη χρήση των Βάσεων Δεδομένων (ΒΔ), που αποτελούν κρίσιμο στοιχείο κάθε Πληροφοριακού Συστήματος (ΠΣ). Το περιεχόμενο περιλαμβάνει το θεωρητικό υπόβαθρο με το Σχεσιακό Μοντέλο και τη Σχεσιακή Άλγεβρα, την εκμά-θηση της γλώσσας SQL (το πρότυπο των Συστημάτων Διαχείρισης ΒΔ), τεχνικές σχεδίασης Σχεσιακών ΒΔ με έμφαση στη θεωρία της κανονικοποίησης, καθώς και εργαστηριακές ασκήσεις με το PostgreSQL, ένα δημοφιλές σύστημα διαχείρισης ΒΔ.",
                            Name = "ΒΑΣΕΙΣ ΔΕΔΟΜΕΝΩΝ ",
                            Semester = 4
                        },
                        new
                        {
                            CourseId = 17,
                            Description = "Το μάθημα \"Προγραμματισμός στο Διαδίκτυο και τον Παγκόσμιο Ιστό\" ασχολείται με τη θεωρητική μελέτη και την πρακτική εξάσκηση σε θέματα προγραμματισμού στο διαδίκτυο και τον παγκόσμιο ιστό. Περιλαμβάνει αρχιτεκτονική πελάτη-εξυπηρετητή, δικτυακό προγραμματισμό, πρωτόκολλο HTTP, υλοποίηση web server, παραλλαγές αρχιτεκτονικής πελάτη-εξυπηρετητή, προγραμματισμό από την πλευρά του εξυπηρετητή (Java servlets) και μόνιμη αποθήκευση δεδομένων σε διαδικτυακές εφαρμογές. Οι φοιτητές εκπαιδεύονται σε τεχνικές που αφορούν την ανάπτυξη και τη λειτουργία των διαδικτυακών εφαρμογών.",
                            Name = "ΠΡΟΓΡΑΜΜΑΤΙΣΜΟΣ ΣΤΟ ΔΙΑΔΙΚΤΥΟ ΚΑΙ ΤΟΝ ΠΑΓΚΟΣΜΙΟ ΙΣΤΟ",
                            Semester = 4
                        },
                        new
                        {
                            CourseId = 18,
                            Description = "Το μάθημα \"Αρχές και Εφαρμογές Σημάτων και Συστημάτων\" εξετάζει τη θεωρία και τις εφαρμογές των σημάτων και των συστημάτων. Αποτελεί θεμελιώδες μάθημα σε προπτυχιακά προγράμματα, συμπεριλαμβανομένων των προγραμμάτων σπουδών στη σύγχρονη Πληροφορική. Παράλληλα, δη-μιουργεί τις βάσεις για εξειδικευμένα τεχνολογικά μαθήματα, όπως Αναγνώριση Προτύπων, Ανάλυση Εικόνας, Τεχνητή Όραση, Τηλεπικοινωνιακά Συστήματα, Δίκτυα Υπολογιστών, Συστήματα Πολυμέσων, Επεξεργασία Φωνής, κ.ά. Οι ενότητες του μαθήματος περιλαμβάνουν ένα εισαγωγικό μέρος για τις έννοιες του σήματος και του συστήματος, μετασχηματισμούς σημάτων, δειγματοληψία και κβά-ντωση σημάτων, γραμμικά αναλλοίωτα συστήματα, συστήματα επικοινωνίας και διαμόρφωση, ψηφιακά συστήματα επικοινωνίας, και το προγραμματιστικό περιβάλλον MATLAB.",
                            Name = "ΑΡΧΕΣ ΚΑΙ ΕΦΑΡΜΟΓΕΣ ΣΗΜΑΤΩΝ ΚΑΙ ΣΥΣΤΗΜΑΤΩΝ",
                            Semester = 4
                        },
                        new
                        {
                            CourseId = 19,
                            Description = "Το μάθημα \"Αλληλεπίδραση Ανθρώπου και Υπολογιστή\" ασχολείται με τον σχεδιασμό του συστήματος διεπαφής ανθρώπου-υπολογιστή. Μελετά την ανθρώπινη πλευρά της αλληλεπίδρα-σης, εστιάζοντας στις ανάγκες, τις δυνατότητες και τις προκλήσεις που αντιμετωπίζει ο χρή-στης. Εξετάζει τα κλασικά και σύγχρονα μέσα επικοινωνίας του υπολογιστή και αναλύει τα μο-ντέλα αλληλεπίδρασης. Επικεντρώνεται στους στόχους, τις μεθόδους και την ανάλυση εργα-σιών που χρησιμοποιούνται για τον σχεδιασμό αποτελεσματικών συστημάτων διεπαφής. Τέ-λος, το μάθημα αναφέρεται στη χρηστικότητα και τη φιλικότητα του λογισμικού, εξετάζοντας τη σημασία της σχεδίασης διεπαφής που προσφέρει ευκολία στον χρήστη και βελτιώνει την εμπειρία χρήσης.",
                            Name = "ΑΛΛΗΛΕΠΙΔΡΑΣΗ ΑΝΘΡΩΠΟΥ ΚΑΙ ΥΠΟΛΟΓΙΣΤΗ",
                            Semester = 5
                        },
                        new
                        {
                            CourseId = 20,
                            Description = "Αναγνώριση Προτύπων (pattern recognition) είναι η επιστημονική περιοχή που έχει στόχο την ταξινόμηση αντικειμένων σε κατηγορίες (κλάσεις) και συμπεριλαμβάνει το επιστημονικό πεδίο της Μηχανικής Μάθησης (machine learning). Σκοπός, επομένως, του παρόντος μαθήματος είναι να παρουσιάσει με ενιαίο τρόπο τις ευρύτερα χρησιμοποιούμενες τεχνικές και μεθοδολο-γίες για προβλήματα αναγνώρισης προτύπων.",
                            Name = "ΑΝΑΓΝΩΡΙΣΗ ΠΡΟΤΥΠΩΝ",
                            Semester = 5
                        },
                        new
                        {
                            CourseId = 21,
                            Description = "Το μάθημα \"Πληροφοριακά Συστήματα\" εστιάζει στην κατανόηση των πληροφοριακών συστη-μάτων (ΠΣ) από διοικητική, οργανωτική, σχεδιαστική και τεχνική πλευρά. Οι φοιτητές αναλύουν τα συστατικά στοιχεία ενός ΠΣ και μαθαίνουν για τους κυριότερους τύπους ΠΣ που χρησιμο-ποιούνται σήμερα. Μελετούν μεθοδολογίες ανάλυσης απαιτήσεων και μετατροπής τους σε σχεδίαση συστήματος. Επιπλέον, αναπτύσσουν ΠΣ και τα δοκιμάζουν, χρησιμοποιώντας την UML για τη δημιουργία διαφόρων μοντέλων ΠΣ. Αναλύουν περιπτώσεις χρήσης μέσω case studies.",
                            Name = "ΠΛΗΡΟΦΟΡΙΑΚΑ ΣΥΣΤΗΜΑΤΑ",
                            Semester = 5
                        },
                        new
                        {
                            CourseId = 22,
                            Description = "Το μάθημα \"Τεχνητή Νοημοσύνη και Εμπειρα Συστήματα\" παρέχει εισαγωγικές γνώσεις στην τεχνητή νοημοσύνη και τα εμπειρα συστήματα. Οι φοιτητές ασχολούνται με την επίλυση προ-βλημάτων σε επιλεγμένες περιοχές, όπως οι γενετικοί αλγόριθμοι, χρησιμοποιώντας μεθόδους τεχνητής νοημοσύνης. Επιπλέον, αποκτούν βασικές γνώσεις στη μηχανική μάθηση και τα νευ-ρωνικά δίκτυα, που είναι σημαντικά εργαλεία στον τομέα της τεχνητής νοημοσύνης.",
                            Name = "ΤΕΧΝΗΤΗ ΝΟΗΜΟΣΥΝΗ ΚΑΙ ΕΜΠΕΙΡΑ ΣΥΣΤΗΜΑΤΑ",
                            Semester = 6
                        },
                        new
                        {
                            CourseId = 23,
                            Description = "Το μάθημα \"Τεχνολογία Λογισμικού\" συμβάλλει στην κάλυψη των τεχνολογικών απαιτήσεων μέσω της έκθεσης των φοιτητών σε σύγχρονες τεχνικές μοντελοποίησης λογισμικού, αρχιτε-κτονικό σχεδιασμό και την γλώσσα μοντελοποίησης UML. Τα θέματα που καλύπτονται περι-λαμβάνουν μοντέλα κύκλου ζωής λογισμικού, γλώσσες μοντελοποίησης (UML), προϋπολογι-σμός κόστους λογισμικού, ανάλυση απαιτήσεων, σχεδιασμός, υλοποίηση και γλώσσες προγραμματισμού, καθώς και έλεγχος, συντήρηση και εργαλεία CASE.",
                            Name = "ΤΕΧΝΟΛΟΓΙΑ ΛΟΓΙΣΜΙΚΟΥ ",
                            Semester = 6
                        },
                        new
                        {
                            CourseId = 24,
                            Description = "Το μάθημα \"Συστήματα Διαχείρισης Βάσεων Δεδομένων\" εστιάζει στη διδασκαλία βασικών αρχών και τεχνικών για τη διαχείριση βάσεων δεδομένων. Περιλαμβάνει την ανάλυση της δομής των αρχείων και των ευρετηρίων που χρησιμοποιούνται για την αποθήκευση και την ανάκτηση δεδομένων από μια βάση.  Εξετάζει τεχνικές για το σχεδιασμό και τη βελτιστοποίηση ερωτή-σεων στη βάση δεδομένων. Επίσης, στα πλαίσια του μαθήματος. εξετάζονται θέματα που σχε-τίζονται με ειδικές αρχιτεκτονικές βάσεων δεδομένων, όπως οι κατανεμημένες βάσεις, οι παράλληλες βάσεις δεδομένων και οι αρχιτεκτονικές Big Data. Τέλος, περιλαμβάνει πρακτικές ασκήσεις πάνω σε δύο δημοφιλείς συστήματα διαχείρισης βάσεων δεδομένων, το PostgreSQL και το MongoDB.",
                            Name = "ΣΥΣΤΗΜΑΤΑ ΔΙΑΧΕΙΡΙΣΗΣ ΒΑΣΕΩΝ ΔΕΔΟΜΕΝΩΝ",
                            Semester = 5,
                            TrackId = 1
                        },
                        new
                        {
                            CourseId = 25,
                            Description = "Το μάθημα “Συστήματα Πολυμέσων” ασχολείται με την επιστημονική περιοχή στην οποία συ-ναντώνται και γονιμοποιούνται πληθώρα επιστημονικών πεδίων, όπως η επεξεργασία σήμα-τος, η θεωρία πληροφορίας και οι επικοινωνίες, με στόχο τη Δημιουργία, την Αποθήκευ-ση/Συμπίεση και τη Διανομή του Πολυμεσικού Περιεχομένου. Σκοπός, επομένως, του παρό-ντος μαθήματος είναι να παρουσιάσει με ενιαίο τρόπο τις θεμελιώδεις έννοιες της πολυμεσικής επεξεργασίας, τα προβλήματα που καλείται να επιλύσει η σχεδίαση πολυμεσικών συστημάτων και τις σημαντικότερες τεχνικές ψηφιοποίησης, συμπίεσης και διανομής πολυμεσικού περιεχομένου.",
                            Name = "ΣΥΣΤΗΜΑΤΑ ΠΟΛΥΜΕΣΩΝ",
                            Semester = 6,
                            TrackId = 1
                        },
                        new
                        {
                            CourseId = 26,
                            Description = "Το μάθημα \"Λογικός Προγραμματισμός\" εξετάζει την προτασιακή και κατηγορηματική λογική, αρχές απόφασης και στρατηγικές, μη μονότονη συμπερασματολογία και λογικό προγραμματι-σμό. Επικεντρώνεται στη γλώσσα Prolog και απλές εφαρμογές της, δομές δεδομένων, στρατη-γική αναζήτησης, αναδρομικό και διαζευκτικό προγραμματισμό, λογικό προγραμματισμό περιορισμών, παράλληλο προγραμματισμό, μεταλογικό προγραμματισμό και προχωρημένες εφαρμογές της Prolog.",
                            Name = "ΛΟΓΙΚΟΣ ΠΡΟΓΡΑΜΜΑΤΙΣΜΟΣ",
                            Semester = 5,
                            TrackId = 1
                        },
                        new
                        {
                            CourseId = 27,
                            Description = "Το μάθημα \"Βιοπληροφορική\" περιλαμβάνει ενότητες όπως εισαγωγή στη βιοπληροφορική, πρόσβαση σε βιολογικά δεδομένα, στοίχιση αλληλουχιών, χρήση του εργαλείου BLAST, πολ-λαπλή στοίχιση ακολουθιών, μοριακή φυλογένεση, ανάλυση δεδομένων DNA και RNA, γονιδιακή έκφραση και πρωτεϊνική ανάλυση.",
                            Name = "ΕΠΕΞΕΡΓΑΣΙΑ ΦΥΣΙΚΗΣ ΓΛΩΣΣΑΣ",
                            Semester = 6,
                            TrackId = 1
                        },
                        new
                        {
                            CourseId = 28,
                            Description = "Το μάθημα \"Προηγμένα Θέματα Επικοινωνιών\" επικεντρώνεται στην ανάλυση προηγμένων θεμάτων στον τομέα των επικοινωνιών. Στο μάθημα αυτό, εξετάζονται οι βασικές αρχές της α-σύρματης επικοινωνίας και η φυσική μοντελοποίηση των ασύρματων καναλιών. Επιπλέον, α-ναλύονται θέματα όπως η ασύρματη μετάδοση, η πολλαπλή πρόσβαση και η χωρητικότητα των καναλιών. Οι φοιτητές εξοικειώνονται με τις αρχιτεκτονικές των δικτύων επόμενης γενιάς (NGN) και τις αντίστοιχες εφαρμογές, καθώς και με τις δορυφορικές επικοινωνίες και τη σχεδίαση δορυφορικών ζεύξεων. Τέλος, αναλύονται οι ασύρματες δικτυακές τεχνολογίες πολλαπλών βημάτων και οι ασύρματες δικτυακές αισθητήρες (WSNs). Μέσω των περιεχομένων του μαθή-ματος, οι φοιτητές αποκτούν γνώσεις για τις προηγμένες τεχνολογίες επικοινωνιών και αναπτύσσουν τις απαιτούμενες δεξιότητες για την ανάλυση και σχεδίαση σύγχρονων επικοινωνιακών συστημάτων.",
                            Name = "ΠΡΟΗΓΜΕΝΑ ΘΕΜΑΤΑ ΕΠΙΚΟΙΝΩΝΙΩΝ",
                            Semester = 5,
                            TrackId = 2
                        },
                        new
                        {
                            CourseId = 29,
                            Description = "Το μάθημα \"Δίκτυα Υψηλών Ταχυτήτων\" αποσκοπεί στην απόκτηση των απαραίτητων γνώσεων για τον σχεδιασμό και την ανάπτυξη δικτύων υψηλών ταχυτήτων, εστιάζοντας στις πιο πρό-σφατες επιστημονικές και τεχνολογικές εξελίξεις του χώρου. Το μάθημα περιλαμβάνει έννοιες και πρωτόκολλα ευρυζωνικών ενσύρματων και ασύρματων δικτύων, δίκτυα μεταγωγής πακέ-των, οπτικά δίκτυα, τεχνολογίες xDSL, IP δίκτυα και υπηρεσίες, ασύρματα τοπικά δίκτυα, α-σύρματα ευρυζωνικά δίκτυα, δορυφορικές επικοινωνίες και Internet of Things (IoT). Η συμβολή του μαθήματος στην κάλυψη επαγγελματικών απαιτήσεων περιλαμβάνει την εισαγωγή σε βα-σικές αρχές και αρχιτεκτονικές δικτύων υψηλών ταχυτήτων, διάφορες τεχνολογίες στον τομέα αυτό, τις έννοιες των τεχνολογιών και προτύπων επικοινωνίας, καθώς και την προσομοίωση και αξιολόγηση δικτύων υψηλών ταχυτήτων.",
                            Name = "ΔΙΚΤΥΑ ΥΨΗΛΩΝ ΤΑΧΥΤΗΤΩΝ",
                            Semester = 6,
                            TrackId = 2
                        },
                        new
                        {
                            CourseId = 30,
                            Description = "Το μάθημα \"Προηγμένη Αρχιτεκτονική Υπολογιστών\" αποτελεί συνέχεια του μαθήματος κορμού Αρχιτεκτονική Υπολογιστών και εμβαθύνει σε θέματα οργάνωσης και σχεδίασης σύγχρονων επεξεργαστών υψηλής απόδοσης. Επικεντρώνεται στην τεχνική διοχέτευση (pipelining), ιεραρχία μνήμης (cache memory, virtual memory), συνδέσεις μεταξύ επεξεργαστή, μνήμης και συσκευών εισόδου/εξόδου, δυναμικό χρονοπογραμματισμό, πρόβλεψη διακλάδωσης και εικασία, καθώς και πολυνηματικούς και πολυπύρηνους επεξεργαστές.",
                            Name = "ΠΡΟΗΓΜΕΝΗ ΑΡΧΙΤΕΚΤΟΝΙΚΗ ΥΠΟΛΟΓΙΣΤΩΝ",
                            Semester = 5,
                            TrackId = 2
                        },
                        new
                        {
                            CourseId = 31,
                            Description = "Το μάθημα \"Προηγμένη Αρχιτεκτονική Υπολογιστών\" αποτελεί συνέχεια του μαθήματος κορ-μού \"Αρχιτεκτονική Υπολογιστών\" και έχει ως στόχο την εμβάθυνση των φοιτητών στην οργά-νωση και σχεδίαση σύγχρονων επεξεργαστών υψηλής απόδοσης. Θα δοθεί έμφαση στην τε-χνική της διοχέτευσης (pipelining) για την αύξηση της απόδοσης, στην ιεραρχία μνήμης με τη χρήση κρυφής μνήμης (cache memory) και εικονικής μνήμης (virtual memory), στις συνδέσεις μεταξύ επεξεργαστή, μνήμης και συσκευών εισόδου/εξόδου, στον δυναμικό χρονοπογραμματισμό, την πρόβλεψη διακλάδωσης και εικασία, καθώς και στους πολυνηματικούς και πολυπύρηνους επεξεργαστές.",
                            Name = "ΠΡΟΓΡΑΜΜΑΤΙΣΜΟΣ ΣΥΣΤΗΜΑΤΩΝ, ΤΗΛΕΠΙΚΟΙΝΩΝΙΩΝ ΚΑΙ ΥΠΗΡΕΣΙΩΝ",
                            Semester = 6,
                            TrackId = 2
                        },
                        new
                        {
                            CourseId = 32,
                            Description = "Το μάθημα \"Σχεδίαση Υπολογιστικών Συστημάτων\" εμβαθύνει στη σχεδίαση ψηφιακών συ-στημάτων, αποτελώντας συνέχεια του μαθήματος Λογικής Σχεδίασης Ψηφιακών Συστημάτων. Περιλαμβάνει θέματα όπως μοντελοποίηση κυκλωμάτων, γλώσσες περιγραφής υλικού (VHDL), σχεδίαση συνδυαστικών και ακολουθιακών κυκλωμάτων, μνήμες, μικροπεξεργαστές, προσο-μοίωση κυκλωμάτων, σύνθεση κυκλωμάτων και χρήση FPGAs στη σχεδίαση ψηφιακών κυ-κλωμάτων.",
                            Name = "ΣΧΕΔΙΑΣΗ ΥΠΟΛΟΓΙΣΤΙΚΩΝ ΣΥΣΤΗΜΑΤΩΝ",
                            Semester = 6,
                            TrackId = 2
                        },
                        new
                        {
                            CourseId = 33,
                            Description = "Το μάθημα \"Κρυπτογραφία\" παρέχει μια εισαγωγή στην κρυπτογραφία και την ιστορική της εξέλιξη. Στα πλαίσια του, γίνεται αναφορά σε μαθηματικές έννοιες, όπως οι ομάδες, τα πεπε-ρασμένα σώματα και οι δακτύλιοι, καθώς και ο αλγόριθμος του Ευκλείδη και η συνάρτηση του Euler. Εξετάζονται αλγόριθμοι ιδιωτικού κλειδιού, όπως η μονοαλφαβητική αντικατάσταση και οι αλγόριθμοι του Καίσαρα, Vigenere και Hill. Επίσης, αναλύονται αλγόριθμοι κρυπτογράφησης όπως οι DES και AES. Το μάθημα περιλαμβάνει, επίσης, ομομορφική κρυπτογραφία, συναρτή-σεις κατακερματισμού, ψηφιακές υπογραφές και εφαρμογές της κρυπτογραφίας και των πρω-τοκόλλων. Τέλος, παρουσιάζονται θέματα υλοποίησης και ανάλυση κρυπτογράφησης, όπως η γραμμική και διαφορική κρυπτανάλυση και οι αλγόριθμοι παραγοντοποίησης.",
                            Name = "ΚΡΥΠΤΟΓΡΑΦΙΑ",
                            Semester = 5,
                            TrackId = 3
                        },
                        new
                        {
                            CourseId = 34,
                            Description = "Το μάθημα \"Αναλυτική Δεδομένων\" παρέχει γνώσεις σχετικά με τη σχεδίαση και υλοποίηση μεθόδων και τεχνικών Αναλυτικής Δεδομένων, η οποία είναι μια από τις πιο σύγχρονες τάσεις στην περιοχή της Πληροφορικής και της Επιστήμης Δεδομένων (Data Science). Το μάθημα πε-ριλαμβάνει εισαγωγή στην Αναλυτική Δεδομένων και προπαρασκευή δεδομένων (Data Preprocessing) για αναλυτικούς σκοπούς. Εξετάζει επίσης αλγορίθμους και τεχνικές Αναλυτικής Δεδομένων, όπως κατηγοριοποίηση/ταξινόμηση και εξόρυξη συχνών προτύπων. Δίνεται επίσης έμφαση σε ειδικά θέματα, όπως η ανάλυση δεδομένων ήχου/εικόνας και γεωγραφικής πληρο-φορίας. Οι φοιτητές πραγματοποιούν εργαστηριακές ασκήσεις χρησιμοποιώντας δημοφιλείς γλώσσες προγραμματισμού, όπως το R και το Python.",
                            Name = "ΑΝΑΛΥΤΙΚΗ ΔΕΔΟΜΕΝΩΝ",
                            Semester = 6,
                            TrackId = 3
                        },
                        new
                        {
                            CourseId = 35,
                            Description = "Το μάθημα \"ΣΥΣΤΗΜΑΤΑ ΥΠΟΣΤΗΡΙΞΗΣ ΑΠΟΦΑΣΕΩΝ\" περιλαμβάνει εισαγωγικές έννοιες, εισα-γωγή στα συστήματα υποστήριξης αποφάσεων, αναλυτικά μοντέλα υποστήριξης αποφάσεων με προσανατολισμό στις προτιμήσεις και με προσανατολισμό στα δεδομένα, μεθοδολογίες α-νάπτυξης, μέθοδοι και τεχνικές πολυκριτηριακής ανάλυσης αποφάσεων, καθώς και την περι-βάλλουσα ανάλυση δεδομένων ως μέθοδο αποτίμησης αποδοτικότητας συστημάτων.",
                            Name = "ΣΥΣΤΗΜΑΤΑ ΥΠΟΣΤΗΡΙΞΗΣ ΑΠΟΦΑΣΕΩΝ",
                            Semester = 6,
                            TrackId = 3
                        },
                        new
                        {
                            CourseId = 36,
                            Description = "Το μάθημα \"ΣΥΣΤΗΜΙΚΗ ΑΝΑΛΥΣΗ\" περιλαμβάνει τις βασικές έννοιες της συστημικής σκέψης στην ανάλυση συστημάτων, τη συστημική προσέγγιση στην ανάλυση συστημάτων, την οργανωτική κυβερνητική συστημάτων, στρατηγικές μεθοδολογίες υπόθεσης, διαμόρφωσης και δοκιμής συστημάτων, μεθοδολογίες σχεδιασμού και ελέγχου συστημάτων και μετασυστημάτων, πολύ-μεθοδολογίες προσέγγισης συστημάτων και πραγματικές εφαρμογές συστημικών μεθοδολογιών στη λειτουργία διεργασιών.",
                            Name = "ΣΥΣΤΗΜΙΚΗ ΑΝΑΛΥΣΗ",
                            Semester = 6,
                            TrackId = 3
                        },
                        new
                        {
                            CourseId = 37,
                            Description = "Το μάθημα \"ΕΙΚΟΝΙΚΗ ΠΡΑΓΜΑΤΙΚΟΤΗΤΑ\" ασχολείται με τη δομή, τη λειτουργία και την ανάπτυξη εφαρμογών εικονικής πραγματικότητας. Παρουσιάζονται οι κατηγορίες συστημάτων εικονικής πραγ-ματικότητας, οι τρισδιάστατοι κόσμοι γραφικών, τα τρισδιάστατα μοντέλα αντικειμένων και η υφή επιφάνειας αντικειμένων. Επίσης, περιλαμβάνεται η διαχείριση πηγών φωτός, ήχων και κάμερας, καθώς και η δημιουργία animations. Η πλατφόρμα Unity3D αποτελεί το περιβάλλον ανάπτυξης και εξερευνάται η ανάπτυξη εφαρμογών εικονικής πραγματικότητας μέσω αυτής της πλατφόρμας.",
                            Name = "ΕΙΚΟΝΙΚΗ ΠΡΑΓΜΑΤΙΚΟΤΗΤΑ",
                            Semester = 7,
                            TrackId = 1
                        },
                        new
                        {
                            CourseId = 38,
                            Description = "Το μάθημα \"ΑΝΑΛΥΣΗ ΕΙΚΟΝΑΣ\" επικεντρώνεται στην ανάπτυξη αλγορίθμων που επιτρέπουν σε μηχανές να κατανοούν τον οπτικό κόσμο. Εντάσσεται στο πεδίο της Τεχνητής Νοημοσύνης και έχει ως στόχο να παρουσιάσει τεχνικές και μεθοδολογίες για προβλήματα ανάλυσης εικόνας. Το περιεχόμενο του μαθήματος περιλαμβάνει εισαγωγή στην ανάλυση εικόνας, τελεστές, κατάτμηση εικόνας, με-τρήσεις αντικειμένου εικόνας, ανάλυση έγχρωμης και πολυφασματικής εικόνας, γεωμετρικές προβο-λές, τρισδιάστατη όραση, στερεοσκοπική ανάλυση, ειδικά θέματα ανάλυσης εικόνας όπως σύντηξη αισθητηρίων και βάσεις δεδομένων εικόνων.",
                            Name = "ΑΝΑΛΥΣΗ ΕΙΚΟΝΑΣ",
                            Semester = 7,
                            TrackId = 1
                        },
                        new
                        {
                            CourseId = 39,
                            Description = "Το μάθημα \"ΣΥΓΧΡΟΝΑ ΘΕΜΑΤΑ ΤΕΧΝΟΛΟΓΙΑΣ ΛΟΓΙΣΜΙΚΟΥ\" επικεντρώνεται στα σύγχρονα ζητήματα της τεχνολογίας λογισμικού. Περιλαμβάνει μοντέλα ανάπτυξης λογισμικού, δομημένη και αντικειμε-νοστρεφή ανάλυση, αρχιτεκτονικό σχεδιασμό και ανάπτυξη εφαρμογών για σύγχρονες κινητές συ-σκευές με ενσωματωμένο λειτουργικό σύστημα. Αναλύονται τα δημοφιλέστερα λειτουργικά συστή-ματα και εργαλεία ανάπτυξης, ενώ επικεντρώνεται κυρίως στην αντικειμενοστρεφή γλώσσα προ-γραμματισμού Java και την ανάπτυξη εφαρμογών για Android συσκευές. Επιπλέον, περιλαμβάνει αισθητήρες, γεοεντοπισμό και προχωρημένες τεχνικές προγραμματισμού όπως ασύγχρονος προγραμματισμός, υπηρεσίες Android, δέκτες εκπομπής και intents. Το μάθημα χρησιμοποιεί το περιβάλλον ανάπτυξης λογισμικού Android Studio.",
                            Name = "ΣΥΓΧΡΟΝΑ ΘΕΜΑΤΑ ΤΕΧΝΟΛΟΓΙΑΣ ΛΟΓΙΣΜΙΚΟΥ",
                            Semester = 7,
                            TrackId = 1
                        },
                        new
                        {
                            CourseId = 40,
                            Description = "Το μάθημα \"Κατανεμημένα και Πολυεπεξεργαστικά Υπολογιστικά Συστήματα\" εστιάζει σε προηγμένα θέματα από την περιοχή των κατανεμημένων συστημάτων και των πολυεπεξεργαστικών υπολογιστι-κών συστημάτων. Το μάθημα καλύπτει θέματα όπως η επικοινωνία και η αλληλεπίδραση σε κατανεμημένα συστήματα, η οργάνωση εξυπηρετητών και η διαχείριση διεργασιών, ο συγχρονισμός και η ανοχή σφαλμάτων, καθώς και ο προγραμματισμός σε πολυεπεξεργαστές. Επίσης, αναλύονται θέματα όπως οι κατανεμημένες δοσοληψίες, ο προγραμματισμός με CUDA και οι αρχιτεκτονικές GPU. Το μάθημα αποσκοπεί στην ανάπτυξη γνώσεων και δεξιοτήτων που αφορούν τη σχεδίαση και την ανάπτυξη προηγμένων κατανεμημένων και πολυεπεξεργαστικών υπολογιστικών συστημάτων.",
                            Name = "ΚΑΤΑΝΕΜΗΜΕΝΑ ΚΑΙ ΠΟΛΥΕΠΕΞΕΡΓΑΣΤΙΚΑ ΥΠΟΛΟΓΙΣΤΙΚΑ ΣΥΣΤΗΜΑΤΑ",
                            Semester = 7,
                            TrackId = 2
                        },
                        new
                        {
                            CourseId = 41,
                            Description = "Το μάθημα \"Κινητές και Ασύρματες Επικοινωνίες\" εστιάζει στις αρχές σχεδίασης και λειτουργίας των συστημάτων κινητών και ασύρματων επικοινωνιών. Καλύπτονται θέματα όπως η αρχιτεκτονική κυψελωτών συστημάτων, η κατανομή πόρων και η διαχείριση ραδιοδιαύλων, οι αρχές των συστημάτων 2G, 3G, 4G, 5G, η διαχείριση κινητικότητας, τα ασύρματα τοπικά δίκτυα (WLAN), καθώς και τα ασύρματα προσωπικά δίκτυα και τα δίκτυα μικρής εμβέλειας. Το μάθημα εξετάζει τις πιο πρόσφατες εξελίξεις στον χώρο και προσφέρει μια εκτεταμένη ανάλυση του θέματος.",
                            Name = "ΚΙΝΗΤΕΣ ΚΑΙ ΑΣΥΡΜΑΤΕΣ ΕΠΙΚΟΙΝΩΝΙΕΣ",
                            Semester = 7,
                            TrackId = 2
                        },
                        new
                        {
                            CourseId = 42,
                            Description = "Το μάθημα \"ΑΣΦΑΛΕΙΑ ΠΛΗΡΟΦΟΡΙΑΚΩΝ ΣΥΣΤΗΜΑΤΩΝ\" επικεντρώνεται στην ασφάλεια της πληρο-φορίας, των συστημάτων και των εφαρμογών κατά την ανάπτυξη και λειτουργία πληροφοριακών συστημάτων. Το μάθημα καλύπτει θέματα όπως εισαγωγικές έννοιες ασφάλειας συστημάτων, συστήματα διαχείρισης ασφάλειας, κρυπτογραφικά συστήματα, υποδομή δημόσιας κλειδαριάς, έλεγχο πρόσβασης και ιδιωτικότητα, ασφάλεια στις τεχνολογίες, ασφαλείς ηλεκτρονικές υπηρεσίες και εισαγωγή στην ασφάλεια δικτύων. Αυτά τα θέματα αποτελούν βασικές πτυχές για την προστασία των πληροφοριακών συστημάτων από απειλές και επιθέσεις.",
                            Name = "ΑΣΦΑΛΕΙΑ ΠΛΗΡΟΦΟΡΙΑΚΩΝ ΣΥΣΤΗΜΑΤΩΝ",
                            Semester = 7,
                            TrackId = 2
                        },
                        new
                        {
                            CourseId = 43,
                            Description = "Το μάθημα \"Ασφάλεια Δικτύων\" ασχολείται με τη θεωρητική και πρακτική μελέτη θεμάτων ασφά-λειας σε όλα τα επίπεδα δικτύων. Κατά τη διάρκεια του μαθήματος θα γίνει ανάλυση των παρακάτω ενοτήτων: εισαγωγή στην ασφάλεια δικτύων, ασφάλεια δρομολόγησης, σχεδιασμός συστημάτων Firewall, ιδιωτικά εικονικά δίκτυα (VPN), ασφάλεια επιπέδου δικτύου (IPSec) και ασφάλεια επιπέδου συνόδου (SSL/TLS). Μέσα από αυτές τις ενότητες οι φοιτητές θα εξοικειωθούν με τις βασικές αρχές και τεχνικές που αφορούν την ασφάλεια δικτύων.",
                            Name = "ΑΣΦΑΛΕΙΑ ΔΙΚΤΥΩΝ",
                            Semester = 8,
                            TrackId = 2
                        },
                        new
                        {
                            CourseId = 44,
                            Description = "Το μάθημα \"Ηλεκτρονικό Επιχειρείν και Καινοτομία\" παρουσιάζει το θεωρητικό και πρακτικό πλαίσιο για τη μελέτη και ανάλυση της επιχειρηματικότητας και της καινοτομίας στο σύγχρονο επιχειρηματι-κό περιβάλλον. Το μάθημα επικεντρώνεται στην ανάλυση και την ανάπτυξη εννοιών όπως η εισαγω-γή στο ηλεκτρονικό επιχειρείν και το ηλεκτρονικό εμπόριο, η διαχείριση της ψηφιακής υποδομής, η στρατηγική του ηλεκτρονικού επιχειρείν, η διοίκηση της εφοδιαστικής αλυσίδας, το ψηφιακό μάρκε-τινγκ, η διαχείριση σχέσεων με τους πελάτες και η υλοποίηση υπηρεσιών του ψηφιακού επιχειρείν. Μέσω μελετών περιπτώσεων, όπως η Amazon, το eBay και η Dell, εξετάζονται πρακτικά παραδείγματα καινοτόμων επιχειρηματικών λύσεων που εφαρμόζονται διεθνώς.",
                            Name = "ΗΛΕΚΤΡΟΝΙΚΟ ΕΠΙΧΕΙΡΕΙΝ ΚΑΙ ΚΑΙΝΟΤΟΜΙΑ",
                            Semester = 8,
                            TrackId = 2
                        },
                        new
                        {
                            CourseId = 45,
                            Description = "Το μάθημα \"Πληροφοριακά Συστήματα στο Διαδίκτυο\" επικεντρώνεται στη μελέτη των πληροφοριακών συστημάτων που λειτουργούν στο διαδίκτυο. Οι θεματικές ενότητες του μαθήματος περιλαμβά-νουν τον δικτυοκεντρικό υπολογισμό, το ηλεκτρονικό εμπόριο και ηλεκτρονικό επιχειρείν, τις νέες τεχνολογίες και εφαρμογές, τα κατανεμημένα συστήματα βασισμένα σε κείμενο, τις βασικές και προηγμένες τεχνικές προγραμματισμού και λειτουργίας στον παγκόσμιο ιστό, καθώς και τον διαδικτυακό προγραμματισμό με Java μέσω Servlets και JSP. Το μάθημα εστιάζει στην κατανόηση και ανάπτυξη πληροφοριακών συστημάτων σε ένα διαδικτυακό περιβάλλον.",
                            Name = "ΠΛΗΡΟΦΟΡΙΑΚΑ ΣΥΣΤΗΜΑΤΑ ΣΤΟ ΔΙΑΔΙΚΤΥΟ",
                            Semester = 8,
                            TrackId = 2
                        },
                        new
                        {
                            CourseId = 46,
                            Description = "Το μάθημα \"Ανάκτηση Πληροφορίας και Αναζήτηση στον Παγκόσμιο Ιστό\" ασχολείται με τις βασικές έννοιες της ανάκτησης πληροφοριών και της αναζήτησης στον Παγκόσμιο Ιστό. Κατά τη διάρκεια του μαθήματος, παρουσιάζονται θέματα όπως η ανάκτηση Boole, το λεξιλόγιο όρων και οι λίστες καταχωρίσεων, η κατασκευή ευρετηρίου, η αξιολόγηση στην ανάκτηση πληροφοριών, η ανάδραση συνάφειας και διεύρυνση ερωτημάτων, οι βασικές αρχές αναζήτησης στον Ιστό, η σταχυολόγηση Ιστού και τα ευρετήρια, καθώς και η ανάλυση συνδέσμων. Αυτές οι έννοιες και τεχνικές αποτελούν τη βάση για την αποτελεσματική αναζήτηση και ανάκτηση πληροφοριών στον Παγκόσμιο Ιστό.",
                            Name = "ΑΝΑΚΤΗΣΗ ΠΛΗΡΟΦΟΡΙΑΣ ΚΑΙ ΑΝΑΖΗΤΗΣΗ ΣΤΟΝ ΠΑΓΚΟΣΜΙΟ ΙΣΤΟ",
                            Semester = 7
                        },
                        new
                        {
                            CourseId = 47,
                            Description = "Το μάθημα \"ΠΡΟΣΟΜΟΙΩΣΗ ΣΥΣΤΗΜΑΤΩΝ\" επικεντρώνεται στην εισαγωγή, ανάπτυξη και εφαρμογή μοντέλων προσομοίωσης συστημάτων. Παρουσιάζονται θέματα σχεδιασμού μοντέλων, παραγωγής τυχαίων αριθμών και τυχαίων μεταβλητών, στοχαστικών μοντέλων, κατασκευής μοντέλων προσομοίωσης, αντικειμενοστραφούς προσομοίωσης και παρουσίασης λογισμικών προσομοίωσης όπως το VENSIM, AnyLogic και Forio. Επίσης, εξετάζονται οι εφαρμογές της προσομοίωσης σε πληροφοριακά συστήματα και δίκτυα υπολογιστών. Το μάθημα συμβάλλει στην απόκτηση βασικών γνώσεων για την προσομοίωση συστημάτων και την εφαρμογή τους στο πεδίο της πληροφορικής.",
                            Name = "ΠΡΟΣΟΜΟΙΩΣΗ ΣΥΣΤΗΜΑΤΩΝ",
                            Semester = 7,
                            TrackId = 3
                        },
                        new
                        {
                            CourseId = 48,
                            Description = "Το μάθημα \"Διοικητική Πληροφορική\" εστιάζει στη διοίκηση και οργάνωση έργων πληροφορικής. Στο μάθημα παρουσιάζονται οι βασικές έννοιες και η διάκριση μεταξύ έργων και λειτουργιών. Εξετάζο-νται οι δομές και το πλαίσιο ενός έργου πληροφορικής, καθώς και οι φάσεις και τα βασικά στοιχεία της διοίκησης ενός έργου. Επιπλέον, μελετώνται η ανάλυση μελέτης περιπτώσεων (case studies), οι τεχνικές χρονοδιαγράμματος έργου και οι τεχνικές και μέθοδοι διοίκησης έργων πληροφορικής. Το μάθημα επικεντρώνεται επίσης στους τρόπους εφαρμογής στρατηγικών αρχών στα έργα πληροφορικής.",
                            Name = "ΔΙΟΙΚΗΤΙΚΗ ΠΛΗΡΟΦΟΡΙΚΗ",
                            Semester = 8,
                            TrackId = 3
                        },
                        new
                        {
                            CourseId = 49,
                            Description = "Το μάθημα \"ΕΚΠΑΙΔΕΥΤΙΚΟ ΛΟΓΙΣΜΙΚΟ\" εισάγει τους φοιτητές στις βοηθούμενες από υπολογιστή ο-δηγίες και τα έξυπνα βοηθητικά συστήματα. Επικεντρώνεται στα μοντέλα χρήστη, με έμφαση στη διάγνωση λαθών, την αναπαράσταση του πεδίου γνώσης διδακτικών εφαρμογών, τον γεννήτορα συμβουλών και το σύστημα διεπαφής με τον μαθητή. Επίσης, παρουσιάζονται πρότυπα έξυπνων διδακτικών συστημάτων σε διάφορους τομείς και πολυμέσα.",
                            Name = "ΕΚΠΑΙΔΕΥΤΙΚΟ ΛΟΓΙΣΜΙΚΟ",
                            Semester = 8,
                            TrackId = 1
                        },
                        new
                        {
                            CourseId = 50,
                            Description = "Το μάθημα \"Επεξεργασία Σημάτων Φωνής και Ήχου\" περιλαμβάνει εισαγωγή στη ψηφιακή επεξεργα-σία φωνής και ήχου, βασικές έννοιες ψηφιακής επεξεργασίας σήματος, παραγωγή ανθρώπινης ομι-λίας, ανάλυση και εκτίμηση παραμέτρων φωνής και ήχου, ψηφιακή κωδικοποίηση, σύνθεση ομιλίας από κείμενο και ήχους, και αυτοματοποιημένη αναγνώριση ομιλίας και φυσικής γλώσσας.",
                            Name = "ΕΠΕΞΕΡΓΑΣΙΑ ΣΗΜΑΤΩΝ ΦΩΝΗΣ ΚΑΙ ΗΧΟΥ",
                            Semester = 8,
                            TrackId = 1
                        },
                        new
                        {
                            CourseId = 51,
                            Description = "Το μάθημα \"Ευφυείς Πράκτορες\" επικεντρώνεται στη δομή και λειτουργία ενός ευφυούς πράκτορα, αντιδρασιακούς και βουλητικούς πράκτορες, κύκλο αντιλαμβάνομαι-αποφασίζω-ενεργώ, μοντέλο BDI, εύρεση μονοπατιού, αναπαράσταση ενεργειών, σχεδιασμό ενεργειών βασισμένο σε κίνητρα και την πυραμίδα του Maslow, συναισθηματική υπολογιστική σε ευφυείς πράκτορες, ανάπτυξη συστημάτων ευφυών πρακτόρων, και εφαρμογές στην πλατφόρμα Unity3D.",
                            Name = "ΕΥΦΥΕΙΣ ΠΡΑΚΤΟΡΕΣ",
                            Semester = 8,
                            TrackId = 1
                        });
                });

            modelBuilder.Entity("CareerOrientation.Data.Entities.Courses.CourseSkill", b =>
                {
                    b.Property<int>("CourseId")
                        .HasColumnType("integer");

                    b.Property<int>("SkillId")
                        .HasColumnType("integer");

                    b.HasKey("CourseId", "SkillId");

                    b.HasIndex("SkillId");

                    b.ToTable("CourseSkills");

                    b.HasData(
                        new
                        {
                            CourseId = 1,
                            SkillId = 1
                        },
                        new
                        {
                            CourseId = 1,
                            SkillId = 2
                        },
                        new
                        {
                            CourseId = 1,
                            SkillId = 3
                        },
                        new
                        {
                            CourseId = 1,
                            SkillId = 4
                        },
                        new
                        {
                            CourseId = 1,
                            SkillId = 5
                        },
                        new
                        {
                            CourseId = 1,
                            SkillId = 6
                        },
                        new
                        {
                            CourseId = 1,
                            SkillId = 7
                        },
                        new
                        {
                            CourseId = 1,
                            SkillId = 8
                        },
                        new
                        {
                            CourseId = 1,
                            SkillId = 9
                        },
                        new
                        {
                            CourseId = 2,
                            SkillId = 10
                        },
                        new
                        {
                            CourseId = 2,
                            SkillId = 11
                        },
                        new
                        {
                            CourseId = 2,
                            SkillId = 12
                        },
                        new
                        {
                            CourseId = 2,
                            SkillId = 13
                        },
                        new
                        {
                            CourseId = 2,
                            SkillId = 5
                        },
                        new
                        {
                            CourseId = 2,
                            SkillId = 14
                        },
                        new
                        {
                            CourseId = 2,
                            SkillId = 15
                        },
                        new
                        {
                            CourseId = 2,
                            SkillId = 16
                        },
                        new
                        {
                            CourseId = 3,
                            SkillId = 17
                        },
                        new
                        {
                            CourseId = 3,
                            SkillId = 18
                        },
                        new
                        {
                            CourseId = 3,
                            SkillId = 19
                        },
                        new
                        {
                            CourseId = 3,
                            SkillId = 20
                        },
                        new
                        {
                            CourseId = 3,
                            SkillId = 21
                        },
                        new
                        {
                            CourseId = 3,
                            SkillId = 22
                        },
                        new
                        {
                            CourseId = 3,
                            SkillId = 23
                        },
                        new
                        {
                            CourseId = 3,
                            SkillId = 24
                        },
                        new
                        {
                            CourseId = 3,
                            SkillId = 25
                        },
                        new
                        {
                            CourseId = 3,
                            SkillId = 26
                        },
                        new
                        {
                            CourseId = 3,
                            SkillId = 27
                        },
                        new
                        {
                            CourseId = 3,
                            SkillId = 28
                        },
                        new
                        {
                            CourseId = 4,
                            SkillId = 29
                        },
                        new
                        {
                            CourseId = 4,
                            SkillId = 30
                        },
                        new
                        {
                            CourseId = 4,
                            SkillId = 31
                        },
                        new
                        {
                            CourseId = 4,
                            SkillId = 32
                        },
                        new
                        {
                            CourseId = 4,
                            SkillId = 21
                        },
                        new
                        {
                            CourseId = 4,
                            SkillId = 23
                        },
                        new
                        {
                            CourseId = 4,
                            SkillId = 15
                        },
                        new
                        {
                            CourseId = 4,
                            SkillId = 6
                        },
                        new
                        {
                            CourseId = 5,
                            SkillId = 45
                        },
                        new
                        {
                            CourseId = 5,
                            SkillId = 46
                        },
                        new
                        {
                            CourseId = 5,
                            SkillId = 47
                        },
                        new
                        {
                            CourseId = 5,
                            SkillId = 21
                        },
                        new
                        {
                            CourseId = 5,
                            SkillId = 37
                        },
                        new
                        {
                            CourseId = 5,
                            SkillId = 44
                        },
                        new
                        {
                            CourseId = 5,
                            SkillId = 9
                        },
                        new
                        {
                            CourseId = 6,
                            SkillId = 33
                        },
                        new
                        {
                            CourseId = 6,
                            SkillId = 34
                        },
                        new
                        {
                            CourseId = 6,
                            SkillId = 35
                        },
                        new
                        {
                            CourseId = 6,
                            SkillId = 36
                        },
                        new
                        {
                            CourseId = 6,
                            SkillId = 37
                        },
                        new
                        {
                            CourseId = 6,
                            SkillId = 7
                        },
                        new
                        {
                            CourseId = 6,
                            SkillId = 8
                        },
                        new
                        {
                            CourseId = 6,
                            SkillId = 9
                        },
                        new
                        {
                            CourseId = 7,
                            SkillId = 38
                        },
                        new
                        {
                            CourseId = 7,
                            SkillId = 39
                        },
                        new
                        {
                            CourseId = 7,
                            SkillId = 40
                        },
                        new
                        {
                            CourseId = 7,
                            SkillId = 41
                        },
                        new
                        {
                            CourseId = 7,
                            SkillId = 7
                        },
                        new
                        {
                            CourseId = 7,
                            SkillId = 8
                        },
                        new
                        {
                            CourseId = 7,
                            SkillId = 43
                        },
                        new
                        {
                            CourseId = 7,
                            SkillId = 9
                        },
                        new
                        {
                            CourseId = 7,
                            SkillId = 44
                        },
                        new
                        {
                            CourseId = 8,
                            SkillId = 48
                        },
                        new
                        {
                            CourseId = 8,
                            SkillId = 49
                        },
                        new
                        {
                            CourseId = 8,
                            SkillId = 50
                        },
                        new
                        {
                            CourseId = 8,
                            SkillId = 51
                        },
                        new
                        {
                            CourseId = 8,
                            SkillId = 41
                        },
                        new
                        {
                            CourseId = 8,
                            SkillId = 43
                        },
                        new
                        {
                            CourseId = 8,
                            SkillId = 7
                        },
                        new
                        {
                            CourseId = 8,
                            SkillId = 9
                        },
                        new
                        {
                            CourseId = 8,
                            SkillId = 42
                        },
                        new
                        {
                            CourseId = 9,
                            SkillId = 52
                        },
                        new
                        {
                            CourseId = 9,
                            SkillId = 53
                        },
                        new
                        {
                            CourseId = 9,
                            SkillId = 54
                        },
                        new
                        {
                            CourseId = 9,
                            SkillId = 55
                        },
                        new
                        {
                            CourseId = 9,
                            SkillId = 56
                        },
                        new
                        {
                            CourseId = 9,
                            SkillId = 41
                        },
                        new
                        {
                            CourseId = 9,
                            SkillId = 6
                        },
                        new
                        {
                            CourseId = 9,
                            SkillId = 57
                        },
                        new
                        {
                            CourseId = 9,
                            SkillId = 58
                        },
                        new
                        {
                            CourseId = 10,
                            SkillId = 59
                        },
                        new
                        {
                            CourseId = 10,
                            SkillId = 60
                        },
                        new
                        {
                            CourseId = 10,
                            SkillId = 61
                        },
                        new
                        {
                            CourseId = 10,
                            SkillId = 62
                        },
                        new
                        {
                            CourseId = 10,
                            SkillId = 41
                        },
                        new
                        {
                            CourseId = 10,
                            SkillId = 43
                        },
                        new
                        {
                            CourseId = 10,
                            SkillId = 6
                        },
                        new
                        {
                            CourseId = 10,
                            SkillId = 63
                        },
                        new
                        {
                            CourseId = 11,
                            SkillId = 64
                        },
                        new
                        {
                            CourseId = 11,
                            SkillId = 65
                        },
                        new
                        {
                            CourseId = 11,
                            SkillId = 66
                        },
                        new
                        {
                            CourseId = 11,
                            SkillId = 67
                        },
                        new
                        {
                            CourseId = 11,
                            SkillId = 68
                        },
                        new
                        {
                            CourseId = 11,
                            SkillId = 69
                        },
                        new
                        {
                            CourseId = 11,
                            SkillId = 71
                        },
                        new
                        {
                            CourseId = 11,
                            SkillId = 72
                        },
                        new
                        {
                            CourseId = 11,
                            SkillId = 8
                        },
                        new
                        {
                            CourseId = 12,
                            SkillId = 72
                        },
                        new
                        {
                            CourseId = 12,
                            SkillId = 73
                        },
                        new
                        {
                            CourseId = 12,
                            SkillId = 74
                        },
                        new
                        {
                            CourseId = 12,
                            SkillId = 75
                        },
                        new
                        {
                            CourseId = 12,
                            SkillId = 76
                        },
                        new
                        {
                            CourseId = 12,
                            SkillId = 77
                        },
                        new
                        {
                            CourseId = 12,
                            SkillId = 41
                        },
                        new
                        {
                            CourseId = 12,
                            SkillId = 43
                        },
                        new
                        {
                            CourseId = 12,
                            SkillId = 14
                        },
                        new
                        {
                            CourseId = 13,
                            SkillId = 78
                        },
                        new
                        {
                            CourseId = 13,
                            SkillId = 79
                        },
                        new
                        {
                            CourseId = 13,
                            SkillId = 80
                        },
                        new
                        {
                            CourseId = 13,
                            SkillId = 81
                        },
                        new
                        {
                            CourseId = 13,
                            SkillId = 41
                        },
                        new
                        {
                            CourseId = 13,
                            SkillId = 8
                        },
                        new
                        {
                            CourseId = 13,
                            SkillId = 9
                        },
                        new
                        {
                            CourseId = 14,
                            SkillId = 82
                        },
                        new
                        {
                            CourseId = 14,
                            SkillId = 83
                        },
                        new
                        {
                            CourseId = 14,
                            SkillId = 84
                        },
                        new
                        {
                            CourseId = 14,
                            SkillId = 85
                        },
                        new
                        {
                            CourseId = 14,
                            SkillId = 86
                        },
                        new
                        {
                            CourseId = 14,
                            SkillId = 87
                        },
                        new
                        {
                            CourseId = 14,
                            SkillId = 88
                        },
                        new
                        {
                            CourseId = 14,
                            SkillId = 89
                        },
                        new
                        {
                            CourseId = 14,
                            SkillId = 41
                        },
                        new
                        {
                            CourseId = 14,
                            SkillId = 43
                        },
                        new
                        {
                            CourseId = 14,
                            SkillId = 23
                        },
                        new
                        {
                            CourseId = 14,
                            SkillId = 77
                        },
                        new
                        {
                            CourseId = 14,
                            SkillId = 8
                        },
                        new
                        {
                            CourseId = 15,
                            SkillId = 90
                        },
                        new
                        {
                            CourseId = 15,
                            SkillId = 91
                        },
                        new
                        {
                            CourseId = 15,
                            SkillId = 92
                        },
                        new
                        {
                            CourseId = 15,
                            SkillId = 93
                        },
                        new
                        {
                            CourseId = 15,
                            SkillId = 94
                        },
                        new
                        {
                            CourseId = 15,
                            SkillId = 95
                        },
                        new
                        {
                            CourseId = 15,
                            SkillId = 96
                        },
                        new
                        {
                            CourseId = 15,
                            SkillId = 97
                        },
                        new
                        {
                            CourseId = 16,
                            SkillId = 98
                        },
                        new
                        {
                            CourseId = 16,
                            SkillId = 99
                        },
                        new
                        {
                            CourseId = 16,
                            SkillId = 100
                        },
                        new
                        {
                            CourseId = 16,
                            SkillId = 101
                        },
                        new
                        {
                            CourseId = 16,
                            SkillId = 102
                        },
                        new
                        {
                            CourseId = 16,
                            SkillId = 103
                        },
                        new
                        {
                            CourseId = 16,
                            SkillId = 41
                        },
                        new
                        {
                            CourseId = 16,
                            SkillId = 43
                        },
                        new
                        {
                            CourseId = 16,
                            SkillId = 8
                        },
                        new
                        {
                            CourseId = 17,
                            SkillId = 104
                        },
                        new
                        {
                            CourseId = 17,
                            SkillId = 105
                        },
                        new
                        {
                            CourseId = 17,
                            SkillId = 106
                        },
                        new
                        {
                            CourseId = 17,
                            SkillId = 107
                        },
                        new
                        {
                            CourseId = 17,
                            SkillId = 108
                        },
                        new
                        {
                            CourseId = 17,
                            SkillId = 23
                        },
                        new
                        {
                            CourseId = 17,
                            SkillId = 43
                        },
                        new
                        {
                            CourseId = 17,
                            SkillId = 77
                        },
                        new
                        {
                            CourseId = 17,
                            SkillId = 88
                        },
                        new
                        {
                            CourseId = 18,
                            SkillId = 109
                        },
                        new
                        {
                            CourseId = 18,
                            SkillId = 110
                        },
                        new
                        {
                            CourseId = 18,
                            SkillId = 111
                        },
                        new
                        {
                            CourseId = 18,
                            SkillId = 112
                        },
                        new
                        {
                            CourseId = 18,
                            SkillId = 113
                        },
                        new
                        {
                            CourseId = 18,
                            SkillId = 114
                        },
                        new
                        {
                            CourseId = 18,
                            SkillId = 41
                        },
                        new
                        {
                            CourseId = 18,
                            SkillId = 43
                        },
                        new
                        {
                            CourseId = 18,
                            SkillId = 23
                        },
                        new
                        {
                            CourseId = 18,
                            SkillId = 77
                        },
                        new
                        {
                            CourseId = 18,
                            SkillId = 9
                        },
                        new
                        {
                            CourseId = 19,
                            SkillId = 115
                        },
                        new
                        {
                            CourseId = 19,
                            SkillId = 116
                        },
                        new
                        {
                            CourseId = 19,
                            SkillId = 117
                        },
                        new
                        {
                            CourseId = 19,
                            SkillId = 43
                        },
                        new
                        {
                            CourseId = 19,
                            SkillId = 23
                        },
                        new
                        {
                            CourseId = 19,
                            SkillId = 42
                        },
                        new
                        {
                            CourseId = 19,
                            SkillId = 9
                        },
                        new
                        {
                            CourseId = 20,
                            SkillId = 118
                        },
                        new
                        {
                            CourseId = 20,
                            SkillId = 119
                        },
                        new
                        {
                            CourseId = 20,
                            SkillId = 120
                        },
                        new
                        {
                            CourseId = 20,
                            SkillId = 121
                        },
                        new
                        {
                            CourseId = 20,
                            SkillId = 122
                        },
                        new
                        {
                            CourseId = 20,
                            SkillId = 43
                        },
                        new
                        {
                            CourseId = 20,
                            SkillId = 41
                        },
                        new
                        {
                            CourseId = 20,
                            SkillId = 9
                        },
                        new
                        {
                            CourseId = 20,
                            SkillId = 8
                        },
                        new
                        {
                            CourseId = 21,
                            SkillId = 123
                        },
                        new
                        {
                            CourseId = 21,
                            SkillId = 124
                        },
                        new
                        {
                            CourseId = 21,
                            SkillId = 125
                        },
                        new
                        {
                            CourseId = 21,
                            SkillId = 126
                        },
                        new
                        {
                            CourseId = 21,
                            SkillId = 97
                        },
                        new
                        {
                            CourseId = 21,
                            SkillId = 23
                        },
                        new
                        {
                            CourseId = 21,
                            SkillId = 9
                        },
                        new
                        {
                            CourseId = 22,
                            SkillId = 127
                        },
                        new
                        {
                            CourseId = 22,
                            SkillId = 128
                        },
                        new
                        {
                            CourseId = 22,
                            SkillId = 129
                        },
                        new
                        {
                            CourseId = 22,
                            SkillId = 130
                        },
                        new
                        {
                            CourseId = 22,
                            SkillId = 41
                        },
                        new
                        {
                            CourseId = 23,
                            SkillId = 131
                        },
                        new
                        {
                            CourseId = 23,
                            SkillId = 132
                        },
                        new
                        {
                            CourseId = 23,
                            SkillId = 133
                        },
                        new
                        {
                            CourseId = 23,
                            SkillId = 108
                        },
                        new
                        {
                            CourseId = 23,
                            SkillId = 41
                        },
                        new
                        {
                            CourseId = 23,
                            SkillId = 43
                        },
                        new
                        {
                            CourseId = 23,
                            SkillId = 23
                        },
                        new
                        {
                            CourseId = 23,
                            SkillId = 24
                        },
                        new
                        {
                            CourseId = 24,
                            SkillId = 134
                        },
                        new
                        {
                            CourseId = 24,
                            SkillId = 135
                        },
                        new
                        {
                            CourseId = 24,
                            SkillId = 136
                        },
                        new
                        {
                            CourseId = 24,
                            SkillId = 137
                        },
                        new
                        {
                            CourseId = 24,
                            SkillId = 108
                        },
                        new
                        {
                            CourseId = 24,
                            SkillId = 8
                        },
                        new
                        {
                            CourseId = 24,
                            SkillId = 88
                        },
                        new
                        {
                            CourseId = 24,
                            SkillId = 41
                        },
                        new
                        {
                            CourseId = 24,
                            SkillId = 43
                        },
                        new
                        {
                            CourseId = 25,
                            SkillId = 138
                        },
                        new
                        {
                            CourseId = 25,
                            SkillId = 139
                        },
                        new
                        {
                            CourseId = 25,
                            SkillId = 140
                        },
                        new
                        {
                            CourseId = 25,
                            SkillId = 141
                        },
                        new
                        {
                            CourseId = 25,
                            SkillId = 43
                        },
                        new
                        {
                            CourseId = 25,
                            SkillId = 41
                        },
                        new
                        {
                            CourseId = 25,
                            SkillId = 9
                        },
                        new
                        {
                            CourseId = 25,
                            SkillId = 14
                        },
                        new
                        {
                            CourseId = 25,
                            SkillId = 42
                        });
                });

            modelBuilder.Entity("CareerOrientation.Data.Entities.Courses.Skill", b =>
                {
                    b.Property<int>("SkillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SkillId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("SkillId");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            SkillId = 1,
                            Name = "Κατανόηση των βασικών εννοιών του σχεδιασμού ψηφιακών συστημάτων και της λειτουργίας τους",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 2,
                            Name = "Κατανόηση της αναπαράστασης των αριθμών και των δεδομένων στα ψηφιακά συστήματα",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 3,
                            Name = "Ικανότητα ανάλυσης και βελτίωσης της απόδοσης ενός ψηφιακού κυκλώματος",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 4,
                            Name = "Εξοικείωση με εργαλεία σχεδίασης και προσομοίωσης ψηφιακών κυκλωμάτων",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 5,
                            Name = "Προσαρμοστικότητα",
                            Type = 1
                        },
                        new
                        {
                            SkillId = 6,
                            Name = "Δημιουργική σκέψη",
                            Type = 1
                        },
                        new
                        {
                            SkillId = 7,
                            Name = "Διαχείριση χρόνου",
                            Type = 1
                        },
                        new
                        {
                            SkillId = 8,
                            Name = "Επίλυση προβλημάτων",
                            Type = 1
                        },
                        new
                        {
                            SkillId = 9,
                            Name = "Κριτική σκέψη",
                            Type = 1
                        },
                        new
                        {
                            SkillId = 10,
                            Name = "Ολοκληρωμένη γνώση των βασικών εννοιών και συμβολισμών που αφορούν τα σύνολα, σχέσεις και απεικονίσεις",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 11,
                            Name = "Ικανότητα εφαρμογής των βασικών αρχών όπως την αρχή της επαγωγής, την αρχή του περιστερεώνα και την αρχή εγκλεισμού-αποκλεισμού για την επίλυση προβλημάτων",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 12,
                            Name = "Ολοκληρωμένη γνώση των βασικών στοιχείων και τεχνικών από την θεωρία αριθμών όπως ο αλγόριθμος του Ευκλείδη, το θεώρημα Euler-Fermat και οι εφαρμογές του κ.α.",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 13,
                            Name = "Κατανόηση των ιδιοτήτων της άλγεβρας Boole και των εφαρμογών της",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 14,
                            Name = "Λήψη αποφάσεων",
                            Type = 1
                        },
                        new
                        {
                            SkillId = 15,
                            Name = "Άσκηση κριτικής και αυτοκριτικής",
                            Type = 1
                        },
                        new
                        {
                            SkillId = 16,
                            Name = "Παραγωγή νέων ερευνητικών ιδεών",
                            Type = 1
                        },
                        new
                        {
                            SkillId = 17,
                            Name = "Αναγνώριση των βασικών αρχών των πρωτοκόλλων που στηρίζουν το Διαδίκτυο, με έμφαση στο IP και το TCP",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 18,
                            Name = "Κατανόηση των βασικών χαρακτηριστικών των εφαρμογών του διαδικτύου",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 19,
                            Name = "Κατανόηση των βασικών τεχνικών και εργαλείων προγραμματισμού και ελέγχου μιας διαδικτυακής εφαρμογής",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 20,
                            Name = "Ικανότητα αξιοποίησης προγραμματιστικών τεχνικών για αποδοτικότερο σχεδιασμό, βελτιστοποίηση απόδοσης και λειτουργική/αποτελεσματική δημιουργία εφαρμογών",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 21,
                            Name = "Αυτονομία",
                            Type = 1
                        },
                        new
                        {
                            SkillId = 22,
                            Name = "Ομαδικότητα",
                            Type = 1
                        },
                        new
                        {
                            SkillId = 23,
                            Name = "Σχεδιασμός και διαχείριση έργων",
                            Type = 1
                        },
                        new
                        {
                            SkillId = 24,
                            Name = "Παραγωγή νέων ερευνητικών ιδεών",
                            Type = 1
                        },
                        new
                        {
                            SkillId = 25,
                            Name = "Δημιουργική σκέψη",
                            Type = 1
                        },
                        new
                        {
                            SkillId = 26,
                            Name = "Ηθική εργασίας",
                            Type = 1
                        },
                        new
                        {
                            SkillId = 27,
                            Name = "Συμβιβασμός",
                            Type = 1
                        },
                        new
                        {
                            SkillId = 28,
                            Name = "Επικοινωνία",
                            Type = 1
                        },
                        new
                        {
                            SkillId = 29,
                            Name = "Προσδιορισμός των βασικών αρχών της επιστήμης των υπολογιστών μέσω της γλώσσας προγραμματισμού Python",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 30,
                            Name = "Γραφή και σύνθεση προγραμμάτων σε γλώσσα Python",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 31,
                            Name = "Eκσφαλμάτωση προγραμμάτων",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 32,
                            Name = "Ευχέρεια στη εφαρμογή βασικών δομών όπως δομές ελέγχου και επανάληψης",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 33,
                            Name = "Προσδιορισμός του χρόνου εκτέλεσης των βασικών λειτουργιών μίας δομής δεδομένων",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 34,
                            Name = "Ικανότητα εφαρμογής των κατάλληλων δομών δεδομένων για την επίλυση υπολογιστικών προβλημάτων.",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 35,
                            Name = "Εξοικείωση με τη μεθοδολογία της ανακάλυψης, της εξέτασης, της δημιουργίας, της σύνθεσης, της οργάνωσης, της αναθεώρησης και της ανακατασκευής των δομών όπο-τε υφίσταται ανάγκη ή πρόβλημα που χρήζει επίλυσης",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 36,
                            Name = "Προαγωγή της ελεύθερης, δημιουργικής και επαγωγικής σκέψης",
                            Type = 1
                        },
                        new
                        {
                            SkillId = 37,
                            Name = "Παράγωγή νέων ερευνητικών ιδεών",
                            Type = 1
                        },
                        new
                        {
                            SkillId = 38,
                            Name = "Κατανόηση των βασικών αρχών του αντικειμενοστρεφή προγραμματισμό",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 39,
                            Name = "Ικανότητα σχεδίασης, ανάπτυξης και να υλοποίησης λογισμικού ως λύσεις σε προβλήματα",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 40,
                            Name = "Ικανότητα εντοπισμού, αξιολόγησης και αξιοποίησης λογισμικού που υλοποιείται σύμφωνα με τις βασικές αρχές της αντικειμενοστρεφούς σχεδίασης",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 41,
                            Name = "Αυτόνομη εργασία ",
                            Type = 1
                        },
                        new
                        {
                            SkillId = 42,
                            Name = "Επίλυση προβλημάτων",
                            Type = 1
                        },
                        new
                        {
                            SkillId = 43,
                            Name = "Ομαδική Εργασία",
                            Type = 1
                        },
                        new
                        {
                            SkillId = 44,
                            Name = "Προσαρμογή σε νέες καταστάσεις",
                            Type = 1
                        },
                        new
                        {
                            SkillId = 45,
                            Name = "Εξοικείωση με βασικές έννοιες και αποτελέσματα των γραφημάτων",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 46,
                            Name = "Κατανόηση των συνδυαστικών αριθμών όπως Fibonacci, Catalan, Motzkin, Stirling, Bell κ.λπ. καθώς και των εφαρμογών τους",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 47,
                            Name = "Εξοικείωση με βασικές έννοιες των αυτομάτων, των τυπικών γλωσσών, των αναγωγικών εξισώσεων και των συνήθων και εκθετικών γεννητριών συναρτήσεων",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 48,
                            Name = "Εξοικείωση με τις βασικές τεχνικές σχεδίασης των σύγχρονων υπολογιστών",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 49,
                            Name = "Ικανότητα σχεδίασης και ανάπτυξης προγραμμάτων σε συμβολική γλώσσα",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 50,
                            Name = "Εξοικείωση με εργαλεία προσομοίωσης επεξεργαστών και ικανότητα εκτέλεσης προγραμμάτων συμβολικής γλώσσας",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 51,
                            Name = "Ικανότητα αξιολόγησης της απόδοσης και σύγκρισης διαφορετικών επεξεργαστών",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 52,
                            Name = "Ικανότητα χρήσης μεθόδου Simplex",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 53,
                            Name = "Κατανόηση και χρήση της θεωρίας της Δυϊκότητας",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 54,
                            Name = "Λύση προβλημάτων με Ανάλυση Ευαισθησίας",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 55,
                            Name = "Κατανόηση Ακέραιου Γραμμικού Προγραμματισμού",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 56,
                            Name = "Λύση προβλημάτων Μεταφοράς και Ανάθεσης",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 57,
                            Name = "Διαχείριση πολύπλοκων προβλημάτων",
                            Type = 1
                        },
                        new
                        {
                            SkillId = 58,
                            Name = "Κατανόηση αλγορίθμων επίλυσης προβλημάτων",
                            Type = 1
                        },
                        new
                        {
                            SkillId = 59,
                            Name = "Κατανόηση των βασικών αρχών της C#",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 60,
                            Name = "Ανάπτυξη εφαρμογών σε ολοκληρωμένα περιβάλλοντα ανάπτυξης (IDEs)",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 61,
                            Name = "Χρήση του Visual Studio Enterprise Edition",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 62,
                            Name = "Ανάπτυξη desktop, web, ή/και mobile εφαρμογών",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 63,
                            Name = "Γρήγορη και αποδοτική παραγωγή κώδικα",
                            Type = 1
                        },
                        new
                        {
                            SkillId = 64,
                            Name = "Γνώση βασικών εννοιών και αρχών των Λ.Σ.",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 65,
                            Name = "Θεωρητικές και πρακτικές γνώσεις Unix/Linux",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 66,
                            Name = "Κατανόηση των εννοιών Διεργασίας και Νήματος",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 67,
                            Name = "Παράθεση αλγορίθμων χρονοδρομολόγησης της CPU",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 68,
                            Name = "Προσδιορισμός κύριων τεχνικών διαχείρισης μνήμης",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 69,
                            Name = "Κατανόηση πολυεπεξεργασίας (multiprocessing)",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 70,
                            Name = "Ικανότητα διαχείρισης αρχείων και καταλόγων",
                            Type = 1
                        },
                        new
                        {
                            SkillId = 71,
                            Name = "Προσαρμογή σε νέες καταστάσεις",
                            Type = 1
                        },
                        new
                        {
                            SkillId = 72,
                            Name = "Προσδιορισμός σύνταξης (BNF, EBNF, συντακτικά διαγράμματα)",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 73,
                            Name = "Αναγνώριση κανονικών εκφράσεων και συμβολισμών FLEX",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 74,
                            Name = "Υπολογισμός συνόλων FIRST, FOLLOW, EMPTY, LOOKAHEAD",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 75,
                            Name = "Αποτίμηση προτεραιοτήτων μεταξύ των συμβόλων μιας δεδομένης γραμματικής",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 76,
                            Name = "Κατασκευή του πίνακα προτεραιοτήτων μιας γραμματικής",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 77,
                            Name = "Εργασία σε διεθνές περιβάλλον",
                            Type = 1
                        },
                        new
                        {
                            SkillId = 78,
                            Name = "Γνώση Θεωριών Πιθανοτήτων και της Στατιστικής",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 79,
                            Name = "Κατασκευή του πίνακα προτεραιοτήτων μιας γραμματικής",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 80,
                            Name = "Κατανόηση μεθοδολογιών Περιγραφικής Στατιστικής για την επεξεργασία των στατιστικών δεδομένων",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 81,
                            Name = "Ικανότητα μετασχηματισμού στατιστικών δεδομένων",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 82,
                            Name = "Θα προσδιορίζει και θα ταξινομεί τα στάδια Σχεδίασης Δικτύων",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 83,
                            Name = "Θα διακρίνει το μοντέλο αναφοράς OSI, τη στοίβα πρωτοκόλλων TCP/IP και τη χρήση τους στους Οργανισμούς Τυποποίησης ",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 84,
                            Name = "Θα είναι σε θέση να προσεγγίζει και να ορίζει το Φυσικό επίπεδο ",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 85,
                            Name = "Θα διακρίνει το Επίπεδο Συνδέσμου Μετάδοσης Δεδομένων ",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 86,
                            Name = "Θα έχει εμπεδώσει τα επίπεδα του Ελέγχου πολλαπλής πρόσβασης",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 87,
                            Name = "Θα υλοποιεί τις εφαρμογές των Δικτύων Μεταγωγής ",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 88,
                            Name = "Εργασία σε διεπιστημονικό περιβάλλον",
                            Type = 1
                        },
                        new
                        {
                            SkillId = 89,
                            Name = "Προσαρμογή σε απρόβλεπτες καταστάσεις",
                            Type = 1
                        },
                        new
                        {
                            SkillId = 90,
                            Name = "Αναγνώριση βασικών εντολών για την ολοκλήρωση των αλγόριθμων",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 91,
                            Name = "Εφαρμογή αλγοριθμικών τεχνικών για την επίλυση υπολογιστικών προβλημάτων",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 92,
                            Name = "Διάκριση αλγοριθμικών προβλημάτων σε συστατικά μέρη",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 93,
                            Name = "Σχεδιασμός και ανάπτυξη πιθανών αποτελεσματικών τεχνικών επίλυσης",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 94,
                            Name = "Εκτίμηση της ποιότητας λύσης ενός αλγορίθμου.",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 95,
                            Name = "Αυτόνομη μελέτη και εργασία ",
                            Type = 1
                        },
                        new
                        {
                            SkillId = 96,
                            Name = "Διαχείριση προβλημάτων",
                            Type = 1
                        },
                        new
                        {
                            SkillId = 97,
                            Name = "Λήψη αποφάσεων ",
                            Type = 1
                        },
                        new
                        {
                            SkillId = 98,
                            Name = "Κατανόηση θεμάτων σχετικά με το απαιτούμενο θεωρητικό υπόβαθρο των ΒΔ",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 99,
                            Name = "Αξιοποίηση θεωρητικής γνώσης για τον σχεδιασμό και την ανάλυση των δεδομένων ενός ΠΣ",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 100,
                            Name = "Χρήση της γλώσσας SQL με θεωρητικό υπόβαθρο Σχεσιακής Άλγεβρας",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 101,
                            Name = "Ενσωμάτωση τεχνικών σχεδίασης Σχεσιακών Βάσεων Δεδομένων",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 102,
                            Name = "Ανάλυση και σύνθεση δεδομένων και πληροφοριών ",
                            Type = 1
                        },
                        new
                        {
                            SkillId = 103,
                            Name = "Σχεδιασμός έργων Προσαρμογή σε νέες καταστάσεις ",
                            Type = 1
                        },
                        new
                        {
                            SkillId = 104,
                            Name = "Γνώση βασικών αρχιτεκτονικών και τεχνολογιών ανάπτυξης εφαρμογών στο διαδίκτυο και στον παγκόσμιο ιστό ",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 105,
                            Name = "Χρήση κατάλληλου προγραμματιστικού περιβάλλοντος για ανάπτυξη εφαρμογών στον πα-γκόσμιο ιστό",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 106,
                            Name = "Παραγωγή εφαρμογών πελάτη-εξυπηρετητή, ",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 107,
                            Name = "Γνώση και χρήση αρχιτεκτονικής 3-tier ",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 108,
                            Name = "Αναζήτηση, ανάλυση και σύνθεση δεδομένων και πληροφοριών",
                            Type = 1
                        },
                        new
                        {
                            SkillId = 109,
                            Name = "Ταξινόμηση σημάτων σε αναλογικά ή ψηφιακά και συνεχούς ή διακριτού χρόνου ",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 110,
                            Name = "Κατανόηση του συνεχούς και διακριτού μετασχηματισμού Σχεδιασμός και υλοποίηση περιο-δικής δειγματοληψίας",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 111,
                            Name = "Γνώση και διαχείριση Αναλογικών και Ψηφιακών Συστημάτων Επικοινωνίας",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 112,
                            Name = "Χρήση Αναλογικής Διαμόρφωσης : Εύρους, Γωνίας (φάσης, συχνότητας), Παλμών",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 113,
                            Name = "Γνώση Πολύπλεξης",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 114,
                            Name = "Διάκριση και ανάπτυξης Παλμοκωδικής διαμόρφωσης",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 115,
                            Name = "Κατανόηση των αρχών του σχεδιασμού ενός συστήματος διεπαφής",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 116,
                            Name = "Ικανότητα σχεδίασης, ανάπτυξης και αξιολόγησης συστημάτων διεπαφής με τους χρήστες για οποιαδήποτε εφαρμογή",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 117,
                            Name = "Ικανότητα αναγνώρισης των διαφόρων εγχειριδίων χρήσης που συνοδεύουν ένα αλλη-λεπιδραστικό λογισμικό",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 118,
                            Name = "Κατανόηση αλγορίθμων και τεχνικών αναγνώρισης προτύπων, όπως την Μπεϋζιανή θεωρία ταξινόμησης, τα Νευρωνικά δίκτυα και τα Κρυφά Μοντέλα Markov",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 119,
                            Name = "Ικανότητα αντίληψης του πως συνδυάζονται γνώσεις πιθανοτήτων, στατιστικής, γραμμικής άλγεβρας και βελτιστοποίησης για τη δημιουργία αλγορίθμων αναγνώρισης προτύπων",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 120,
                            Name = "Ικανότητα ανάλυσης προβλημάτων πραγματικών δεδομένων στα οποία απαιτείται η σχεδίαση/ανάπτυξη/υλοποίηση συστημάτων ταξινόμησης αντικειμένων",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 121,
                            Name = "Ικανότητα διαχείρισης του φόρτου και της πολυπλοκότητας τέτοιων προβλημάτων πραγματικών δεδομένων σε περιβάλλον ομαδικής εργασίας",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 122,
                            Name = "Αφαιρετική ικανότητα",
                            Type = 1
                        },
                        new
                        {
                            SkillId = 123,
                            Name = "Κατανόηση της έννοιας των Πληροφοριακών Συστημάτων (ΠΣ) σε οργανωτική και τεχνική διάσταση",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 124,
                            Name = "Διάκριση κυριότερων τύπων πληροφοριακών συστημάτων που χρησιμοποιούνται",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 125,
                            Name = "Γνώση μεθοδολογιών ανάλυσης απαιτήσεων και το μετασχηματισμό σε σχεδίαση συστήματος",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 126,
                            Name = "Χρήση UML για την κατασκευή Μοντέλων ΠΣ",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 127,
                            Name = "Γνώση βασικών εννοιών Τεχνητής Νοημοσύνης (ΤΝ) και των Έμπειρων Συστημάτων (ΕΣ)",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 128,
                            Name = "Ανάπτυξη αλγορίθμων αναζήτησης λύσης με χρήση τεχνητής νοημοσύνης",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 129,
                            Name = "Έλεγχος Ασάφειας και την Αβεβαιότητας σε συστήματα κανόνων",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 130,
                            Name = "Γνώση Μηχανικής Μάθησης και Νευρωνικών Δικτύων",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 131,
                            Name = "Δόμηση εγγράφων ανάλυσης απαιτήσεων λογισμικού",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 132,
                            Name = "Οργάνωση σχεδίων λογισμικού βασισμένα σε γλώσσες ",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 133,
                            Name = "Χρήση μοντέλου κύκλου ζωής λογισμικού Rational Unified Process",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 134,
                            Name = "Κατανόηση της φυσικής οργάνωσης και δομής των Συστημάτων Διαχείρισης Βάσεων Δεδομένων (ΣΔΒΔ), ως κομβικών συστατικών ενός Πληροφοριακού Συστήματος (ΠΣ)",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 135,
                            Name = "Ικανότητα διαχείρισης θεμάτων που σχετίζονται με τις δοσοληψίες",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 136,
                            Name = "Ικανότητα αναγνώρισης των χαρακτηριστικών των ειδικών αρχιτεκτονικών ΒΔ ανάλογα με τον τύπο τους",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 137,
                            Name = "Σχεδιασμός Πληροφοριακών Συστημάτων",
                            Type = 1
                        },
                        new
                        {
                            SkillId = 138,
                            Name = "Κατανόηση τεχνικών και μεθοδολογιών δημιουργίας, συμπίεσης και δικτύωσης ψηφιακού περιεχομένου, όπως συμπίεσης χωρίς/με απώλειες εικόνας/ήχου/βίντεο/γραφικών (JPEG, JPEG-2000, MPEG-4), ασύρματης δικτύωσης (π.χ., Bluetooth) και ψηφιακής διαχείρισης δικαιωμάτων (π.χ., λύσεις DRM στη μουσική βιομηχανία)",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 139,
                            Name = "Ικανότητα αντίληψης των συνδυασμών γνώσεων επεξεργασίας σήματος, θεωρίας χρώματος, ψυχοακουστικής, θεωρίας της πληροφορίας, συμπίεσης και δικτύωσης για τη δημιουργία και λειτουργία συστημάτων πολυμέσων",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 140,
                            Name = "Δυνατότητα ανάπτυξης προχωρημένου λογισμικού Python/MATLAB/GNU Octave για την υλοποίηση αλγορίθμων, τεχνικών και μεθόδων επεξεργασίας πολυμεσικού περιεχομένου",
                            Type = 0
                        },
                        new
                        {
                            SkillId = 141,
                            Name = "Διαχείριση φόρτου και άγχους",
                            Type = 1
                        },
                        new
                        {
                            SkillId = 142,
                            Name = "asdas",
                            Type = 0
                        });
                });

            modelBuilder.Entity("CareerOrientation.Data.Entities.Specialties.MastersDegree", b =>
                {
                    b.Property<int>("MastersDegreeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MastersDegreeId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("MastersDegreeId");

                    b.ToTable("MastersDegrees");
                });

            modelBuilder.Entity("CareerOrientation.Data.Entities.Specialties.Profession", b =>
                {
                    b.Property<int>("ProfessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ProfessionId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("ProfessionId");

                    b.ToTable("Professions");
                });

            modelBuilder.Entity("CareerOrientation.Data.Entities.Specialties.Track", b =>
                {
                    b.Property<int>("TrackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TrackId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("TrackId");

                    b.ToTable("Tracks");

                    b.HasData(
                        new
                        {
                            TrackId = 1,
                            Name = "ΤΛΕΣ"
                        },
                        new
                        {
                            TrackId = 2,
                            Name = "ΠΣΥ"
                        },
                        new
                        {
                            TrackId = 3,
                            Name = "ΔΥΣ"
                        });
                });

            modelBuilder.Entity("CareerOrientation.Data.Entities.SpecialtiesRelations.TrackMastersDegree", b =>
                {
                    b.Property<int>("TrackId")
                        .HasColumnType("integer");

                    b.Property<int>("MastersDegreeId")
                        .HasColumnType("integer");

                    b.HasKey("TrackId", "MastersDegreeId");

                    b.HasIndex("MastersDegreeId");

                    b.ToTable("TrackMastersDegrees");
                });

            modelBuilder.Entity("CareerOrientation.Data.Entities.SpecialtiesRelations.TrackProfession", b =>
                {
                    b.Property<int>("TrackId")
                        .HasColumnType("integer");

                    b.Property<int>("ProfessionId")
                        .HasColumnType("integer");

                    b.HasKey("TrackId", "ProfessionId");

                    b.HasIndex("ProfessionId");

                    b.ToTable("TrackProfessions");
                });

            modelBuilder.Entity("CareerOrientation.Data.Entities.Tests.GeneralTest", b =>
                {
                    b.Property<int>("GeneralTestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("GeneralTestId"));

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("GeneralTestId");

                    b.ToTable("GeneralTests");
                });

            modelBuilder.Entity("CareerOrientation.Data.Entities.Tests.LikertScaleAnswers", b =>
                {
                    b.Property<int>("LikertScaleAnswerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("LikertScaleAnswerId"));

                    b.Property<string>("Option1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Option2")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Option3")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Option4")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Option5")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("LikertScaleAnswerId");

                    b.ToTable("LikertScaleAnswers");
                });

            modelBuilder.Entity("CareerOrientation.Data.Entities.Tests.MultipleChoiceAnswer", b =>
                {
                    b.Property<int>("MultipleChoiceAnswerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MultipleChoiceAnswerId"));

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("boolean");

                    b.Property<int>("QuestionId")
                        .HasColumnType("integer");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("MultipleChoiceAnswerId");

                    b.HasIndex("QuestionId");

                    b.ToTable("MultipleChoiceAnswers");
                });

            modelBuilder.Entity("CareerOrientation.Data.Entities.Tests.Question", b =>
                {
                    b.Property<int>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("QuestionId"));

                    b.Property<int?>("GeneralTestId")
                        .HasColumnType("integer");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<int?>("UniversityTestId")
                        .HasColumnType("integer");

                    b.HasKey("QuestionId");

                    b.HasIndex("GeneralTestId");

                    b.HasIndex("UniversityTestId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("CareerOrientation.Data.Entities.Tests.QuestionLikertScaleAnswers", b =>
                {
                    b.Property<int>("QuestionId")
                        .HasColumnType("integer");

                    b.Property<int>("LikertScaleAnswersId")
                        .HasColumnType("integer");

                    b.HasKey("QuestionId", "LikertScaleAnswersId");

                    b.HasIndex("LikertScaleAnswersId");

                    b.ToTable("QuestionLikertScaleAnswers");
                });

            modelBuilder.Entity("CareerOrientation.Data.Entities.Tests.TrueFalseAnswer", b =>
                {
                    b.Property<int>("QuestionId")
                        .HasColumnType("integer");

                    b.Property<bool>("Value")
                        .HasColumnType("boolean");

                    b.HasKey("QuestionId");

                    b.ToTable("TrueFalseAnswers");
                });

            modelBuilder.Entity("CareerOrientation.Data.Entities.Tests.UniversityTest", b =>
                {
                    b.Property<int>("UniversityTestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UniversityTestId"));

                    b.Property<bool>("IsRevision")
                        .HasColumnType("boolean");

                    b.Property<int?>("Semester")
                        .HasColumnType("integer");

                    b.Property<int?>("TrackId")
                        .HasColumnType("integer");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.HasKey("UniversityTestId");

                    b.HasIndex("TrackId");

                    b.ToTable("UniversityTests");
                });

            modelBuilder.Entity("CareerOrientation.Data.Entities.TestsSpecialtiesRelations.QuestionMastersDegree", b =>
                {
                    b.Property<int>("QuestionId")
                        .HasColumnType("integer");

                    b.Property<int>("MastersDegreeId")
                        .HasColumnType("integer");

                    b.HasKey("QuestionId", "MastersDegreeId");

                    b.HasIndex("MastersDegreeId");

                    b.ToTable("QuestionsMastersDegrees");
                });

            modelBuilder.Entity("CareerOrientation.Data.Entities.TestsSpecialtiesRelations.QuestionProfession", b =>
                {
                    b.Property<int>("QuestionId")
                        .HasColumnType("integer");

                    b.Property<int>("ProfessionId")
                        .HasColumnType("integer");

                    b.HasKey("QuestionId", "ProfessionId");

                    b.HasIndex("ProfessionId");

                    b.ToTable("QuestionsProfessions");
                });

            modelBuilder.Entity("CareerOrientation.Data.Entities.TestsSpecialtiesRelations.QuestionTrack", b =>
                {
                    b.Property<int>("QuestionId")
                        .HasColumnType("integer");

                    b.Property<int>("TrackId")
                        .HasColumnType("integer");

                    b.HasKey("QuestionId", "TrackId");

                    b.HasIndex("TrackId");

                    b.ToTable("QuestionsTracks");
                });

            modelBuilder.Entity("CareerOrientation.Data.Entities.TestsUsersRelations.StudentTookUniversityTest", b =>
                {
                    b.Property<int>("UniversityTestId")
                        .HasColumnType("integer");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("UniversityTestId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("StudentsTookUniversityTests");
                });

            modelBuilder.Entity("CareerOrientation.Data.Entities.TestsUsersRelations.UserLikertScaleAnswer", b =>
                {
                    b.Property<int>("QuestionId")
                        .HasColumnType("integer");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<int>("Value")
                        .HasColumnType("integer");

                    b.HasKey("QuestionId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserLikertScaleAnswers");
                });

            modelBuilder.Entity("CareerOrientation.Data.Entities.TestsUsersRelations.UserMultipleChoiceAnswer", b =>
                {
                    b.Property<int>("QuestionId")
                        .HasColumnType("integer");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("QuestionId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserMultipleChoiceAnswers");
                });

            modelBuilder.Entity("CareerOrientation.Data.Entities.TestsUsersRelations.UserTookGeneralTest", b =>
                {
                    b.Property<int>("GeneralTestId")
                        .HasColumnType("integer");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("GeneralTestId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UsersTookGeneralTests");
                });

            modelBuilder.Entity("CareerOrientation.Data.Entities.TestsUsersRelations.UserTrueFalseAnswer", b =>
                {
                    b.Property<int>("QuestionId")
                        .HasColumnType("integer");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("QuestionId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserTrueFalseAnswers");
                });

            modelBuilder.Entity("CareerOrientation.Data.Entities.Users.UniversityStudent", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<bool>("IsGraduate")
                        .HasColumnType("boolean");

                    b.Property<int?>("Semester")
                        .HasColumnType("integer");

                    b.Property<int?>("TrackId")
                        .HasColumnType("integer");

                    b.HasKey("UserId");

                    b.HasIndex("TrackId");

                    b.ToTable("UniversityStudents");
                });

            modelBuilder.Entity("CareerOrientation.Data.Entities.Users.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsProspectiveStudent")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("CareerOrientation.Data.Entities.UsersCoursesRelations.UserCourseGrade", b =>
                {
                    b.Property<int>("CourseId")
                        .HasColumnType("integer");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<float>("Value")
                        .HasColumnType("real");

                    b.HasKey("CourseId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserCourseGrade");
                });

            modelBuilder.Entity("CareerOrientation.Data.Entities.UsersCoursesRelations.UserCourseStatistics", b =>
                {
                    b.Property<int>("CourseId")
                        .HasColumnType("integer");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<int>("AccessCount")
                        .HasColumnType("integer");

                    b.HasKey("CourseId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserCourseStatistics");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("CareerOrientation.Data.Entities.Courses.Course", b =>
                {
                    b.HasOne("CareerOrientation.Data.Entities.Specialties.Track", "Track")
                        .WithMany("Courses")
                        .HasForeignKey("TrackId");

                    b.Navigation("Track");
                });

            modelBuilder.Entity("CareerOrientation.Data.Entities.Courses.CourseSkill", b =>
                {
                    b.HasOne("CareerOrientation.Data.Entities.Courses.Course", null)
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CareerOrientation.Data.Entities.Courses.Skill", null)
                        .WithMany()
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CareerOrientation.Data.Entities.SpecialtiesRelations.TrackMastersDegree", b =>
                {
                    b.HasOne("CareerOrientation.Data.Entities.Specialties.MastersDegree", "MastersDegree")
                        .WithMany()
                        .HasForeignKey("MastersDegreeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CareerOrientation.Data.Entities.Specialties.Track", "Track")
                        .WithMany()
                        .HasForeignKey("TrackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MastersDegree");

                    b.Navigation("Track");
                });

            modelBuilder.Entity("CareerOrientation.Data.Entities.SpecialtiesRelations.TrackProfession", b =>
                {
                    b.HasOne("CareerOrientation.Data.Entities.Specialties.Profession", "Profession")
                        .WithMany()
                        .HasForeignKey("ProfessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CareerOrientation.Data.Entities.Specialties.Track", "Track")
                        .WithMany()
                        .HasForeignKey("TrackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profession");

                    b.Navigation("Track");
                });

            modelBuilder.Entity("CareerOrientation.Data.Entities.Tests.MultipleChoiceAnswer", b =>
                {
                    b.HasOne("CareerOrientation.Data.Entities.Tests.Question", "Question")
                        .WithMany("MultipleChoiceAnswers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("CareerOrientation.Data.Entities.Tests.Question", b =>
                {
                    b.HasOne("CareerOrientation.Data.Entities.Tests.GeneralTest", "GeneralTest")
                        .WithMany("Questions")
                        .HasForeignKey("GeneralTestId");

                    b.HasOne("CareerOrientation.Data.Entities.Tests.UniversityTest", "UniversityTest")
                        .WithMany("Questions")
                        .HasForeignKey("UniversityTestId");

                    b.Navigation("GeneralTest");

                    b.Navigation("UniversityTest");
                });

            modelBuilder.Entity("CareerOrientation.Data.Entities.Tests.QuestionLikertScaleAnswers", b =>
                {
                    b.HasOne("CareerOrientation.Data.Entities.Tests.LikertScaleAnswers", null)
                        .WithMany()
                        .HasForeignKey("LikertScaleAnswersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CareerOrientation.Data.Entities.Tests.Question", null)
                        .WithMany()
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CareerOrientation.Data.Entities.Tests.TrueFalseAnswer", b =>
                {
                    b.HasOne("CareerOrientation.Data.Entities.Tests.Question", "Question")
                        .WithOne("TrueFalseAnswer")
                        .HasForeignKey("CareerOrientation.Data.Entities.Tests.TrueFalseAnswer", "QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("CareerOrientation.Data.Entities.Tests.UniversityTest", b =>
                {
                    b.HasOne("CareerOrientation.Data.Entities.Specialties.Track", "Track")
                        .WithMany("UniversityTests")
                        .HasForeignKey("TrackId");

                    b.Navigation("Track");
                });

            modelBuilder.Entity("CareerOrientation.Data.Entities.TestsSpecialtiesRelations.QuestionMastersDegree", b =>
                {
                    b.HasOne("CareerOrientation.Data.Entities.Specialties.MastersDegree", "MastersDegree")
                        .WithMany()
                        .HasForeignKey("MastersDegreeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CareerOrientation.Data.Entities.Tests.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MastersDegree");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("CareerOrientation.Data.Entities.TestsSpecialtiesRelations.QuestionProfession", b =>
                {
                    b.HasOne("CareerOrientation.Data.Entities.Specialties.Profession", "Profession")
                        .WithMany()
                        .HasForeignKey("ProfessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CareerOrientation.Data.Entities.Tests.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profession");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("CareerOrientation.Data.Entities.TestsSpecialtiesRelations.QuestionTrack", b =>
                {
                    b.HasOne("CareerOrientation.Data.Entities.Tests.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CareerOrientation.Data.Entities.Specialties.Track", "Track")
                        .WithMany()
                        .HasForeignKey("TrackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");

                    b.Navigation("Track");
                });

            modelBuilder.Entity("CareerOrientation.Data.Entities.TestsUsersRelations.StudentTookUniversityTest", b =>
                {
                    b.HasOne("CareerOrientation.Data.Entities.Tests.UniversityTest", "UniversityTest")
                        .WithMany()
                        .HasForeignKey("UniversityTestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CareerOrientation.Data.Entities.Users.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UniversityTest");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CareerOrientation.Data.Entities.TestsUsersRelations.UserLikertScaleAnswer", b =>
                {
                    b.HasOne("CareerOrientation.Data.Entities.Tests.Question", "Question")
                        .WithMany("UsersLikertScaleAnswers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CareerOrientation.Data.Entities.Users.User", "User")
                        .WithMany("UserLikertScaleAnswers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CareerOrientation.Data.Entities.TestsUsersRelations.UserMultipleChoiceAnswer", b =>
                {
                    b.HasOne("CareerOrientation.Data.Entities.Tests.MultipleChoiceAnswer", "MultipleChoiceAnswer")
                        .WithMany()
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CareerOrientation.Data.Entities.Users.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MultipleChoiceAnswer");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CareerOrientation.Data.Entities.TestsUsersRelations.UserTookGeneralTest", b =>
                {
                    b.HasOne("CareerOrientation.Data.Entities.Tests.GeneralTest", "GeneralTest")
                        .WithMany()
                        .HasForeignKey("GeneralTestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CareerOrientation.Data.Entities.Users.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GeneralTest");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CareerOrientation.Data.Entities.TestsUsersRelations.UserTrueFalseAnswer", b =>
                {
                    b.HasOne("CareerOrientation.Data.Entities.Tests.TrueFalseAnswer", "TrueFalseAnswer")
                        .WithMany()
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CareerOrientation.Data.Entities.Users.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TrueFalseAnswer");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CareerOrientation.Data.Entities.Users.UniversityStudent", b =>
                {
                    b.HasOne("CareerOrientation.Data.Entities.Specialties.Track", "Track")
                        .WithMany("UniversityStudents")
                        .HasForeignKey("TrackId");

                    b.HasOne("CareerOrientation.Data.Entities.Users.User", "User")
                        .WithOne("UniversityStudent")
                        .HasForeignKey("CareerOrientation.Data.Entities.Users.UniversityStudent", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Track");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CareerOrientation.Data.Entities.UsersCoursesRelations.UserCourseGrade", b =>
                {
                    b.HasOne("CareerOrientation.Data.Entities.Courses.Course", null)
                        .WithMany("UserCourseGrades")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CareerOrientation.Data.Entities.Users.User", null)
                        .WithMany("UserCourseGrades")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CareerOrientation.Data.Entities.UsersCoursesRelations.UserCourseStatistics", b =>
                {
                    b.HasOne("CareerOrientation.Data.Entities.Courses.Course", null)
                        .WithMany("UserCourseStatistics")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CareerOrientation.Data.Entities.Users.User", null)
                        .WithMany("UserCourseStatistics")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("CareerOrientation.Data.Entities.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("CareerOrientation.Data.Entities.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CareerOrientation.Data.Entities.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("CareerOrientation.Data.Entities.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CareerOrientation.Data.Entities.Courses.Course", b =>
                {
                    b.Navigation("UserCourseGrades");

                    b.Navigation("UserCourseStatistics");
                });

            modelBuilder.Entity("CareerOrientation.Data.Entities.Specialties.Track", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("UniversityStudents");

                    b.Navigation("UniversityTests");
                });

            modelBuilder.Entity("CareerOrientation.Data.Entities.Tests.GeneralTest", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("CareerOrientation.Data.Entities.Tests.Question", b =>
                {
                    b.Navigation("MultipleChoiceAnswers");

                    b.Navigation("TrueFalseAnswer");

                    b.Navigation("UsersLikertScaleAnswers");
                });

            modelBuilder.Entity("CareerOrientation.Data.Entities.Tests.UniversityTest", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("CareerOrientation.Data.Entities.Users.User", b =>
                {
                    b.Navigation("UniversityStudent");

                    b.Navigation("UserCourseGrades");

                    b.Navigation("UserCourseStatistics");

                    b.Navigation("UserLikertScaleAnswers");
                });
#pragma warning restore 612, 618
        }
    }
}
